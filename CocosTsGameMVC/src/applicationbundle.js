var CocosTSGame =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "D:\\starting-typescript-and-cocos2dx\\CocosTsGameMVC/src/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ApplicationEvents = (function () {\r\n    function ApplicationEvents() {\r\n    }\r\n    return ApplicationEvents;\r\n}());\r\nApplicationEvents.APP_STARTUP = \"App:startup\";\r\nApplicationEvents.APP_STARTUP_COMPLETE = \"App:startupComplete\";\r\nApplicationEvents.APP_GOTO_PLAY_SCENE = \"App:goto:play:scene\";\r\nApplicationEvents.APP_GOTO_SPLASH_SCENE = \"App:goto:splash:scene\";\r\nexports.ApplicationEvents = ApplicationEvents;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./events/ApplicationEvents.ts\n// module id = 0\n// module chunks = 0\n\n//# sourceURL=webpack:///./events/ApplicationEvents.ts?");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @class SceneExtensions -  provides subscribable signal wrappers around scene events\r\n * onEnter\r\n * onEnterTransitionDidFinish\r\n * onExit\r\n * onExitTransitionDidStart\r\n */\r\nvar SceneExtended = (function (_super) {\r\n    __extends(SceneExtended, _super);\r\n    function SceneExtended() {\r\n        var _this = _super.call(this) || this;\r\n        _super.prototype.ctor.call(_this); //always call this for compatibility with cocos2dx JS Javascript class system\r\n        _this.onEnterSignal = new signals.Signal();\r\n        _this.onEnterTransitionDidFinishSignal = new signals.Signal();\r\n        _this.onExitSignal = new signals.Signal();\r\n        _this.onExitTransitionDidStartSignal = new signals.Signal();\r\n        return _this;\r\n    }\r\n    SceneExtended.prototype.onEnter = function () {\r\n        _super.prototype.onEnter.call(this);\r\n        this.onEnterSignal.dispatch();\r\n    };\r\n    SceneExtended.prototype.onEnterTransitionDidFinish = function () {\r\n        _super.prototype.onEnterTransitionDidFinish.call(this);\r\n        this.onEnterTransitionDidFinishSignal.dispatch();\r\n    };\r\n    SceneExtended.prototype.onExit = function () {\r\n        this.onExitSignal.dispatch();\r\n        _super.prototype.onExit.call(this);\r\n    };\r\n    SceneExtended.prototype.onExitTransitionDidStart = function () {\r\n        _super.prototype.onExitTransitionDidStart.call(this);\r\n        this.onExitTransitionDidStartSignal.dispatch();\r\n    };\r\n    return SceneExtended;\r\n}(cc.Scene));\r\nexports.SceneExtended = SceneExtended;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/SceneExtended.ts\n// module id = 1\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/SceneExtended.ts?");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar View_1 = __webpack_require__(7);\r\nvar SceneView = (function (_super) {\r\n    __extends(SceneView, _super);\r\n    function SceneView() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return SceneView;\r\n}(View_1.View));\r\nexports.SceneView = SceneView;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/SceneView.ts\n// module id = 2\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/SceneView.ts?");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description Virtual class - must be subclassed, the onViewReady function must be overriden\r\n * provides base functionality for a view controller , contains properties for respective view and model\r\n */\r\nvar ViewController = (function () {\r\n    function ViewController() {\r\n        /**\r\n         * @description the view associated with this controller, is assigned in viewReady(view:IView) function\r\n          */\r\n        this._view = undefined;\r\n        this._model = undefined;\r\n        //inject \r\n        this._system = undefined;\r\n    }\r\n    /**\r\n     * @description function called by the IOC container when this class is instantiated\r\n     */\r\n    ViewController.prototype.setup = function () {\r\n    };\r\n    /**\r\n     * @description only override if you need to, this function assigns the associated view and model to respective _view/_model  class variables and calls onViewReady()\r\n     * @param view:IView\r\n     */\r\n    ViewController.prototype.viewReady = function (view, model) {\r\n        this._view = view;\r\n        this._model = model;\r\n        this.onViewReady();\r\n    };\r\n    ViewController.prototype.getView = function () {\r\n        return this._view;\r\n    };\r\n    /**\r\n     * @description Virtual function that is called after the view is assigned to the controllers _view,\r\n     *  it is here that you should initialise listeners and do futher view setup\r\n     */\r\n    ViewController.prototype.onViewReady = function () {\r\n        throw (new Error(\"ViewController:onViewReady is an abstract function. It must be overridden\"));\r\n    };\r\n    return ViewController;\r\n}());\r\nexports.ViewController = ViewController;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/ViewController.ts\n// module id = 3\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/ViewController.ts?");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AssetTypes_1 = __webpack_require__(5);\r\nvar MockAsset_1 = __webpack_require__(11);\r\n/**\r\n * @class CharacterAssetCreationOptions\r\n * @description provides creation options to CharacterAssetFactory\r\n */\r\nvar CharacterAssetCreationOptions = (function () {\r\n    /**\r\n     *\r\n     * @param type - the type of object to create\r\n     * @param name -the name assigned to the cc.node see cc.node.name\r\n     */\r\n    function CharacterAssetCreationOptions(type, name) {\r\n        this._type = type;\r\n        this._name = name;\r\n    }\r\n    CharacterAssetCreationOptions.prototype.getType = function () {\r\n        return this._type;\r\n    };\r\n    CharacterAssetCreationOptions.prototype.getName = function () {\r\n        return this._name;\r\n    };\r\n    return CharacterAssetCreationOptions;\r\n}());\r\nexports.CharacterAssetCreationOptions = CharacterAssetCreationOptions;\r\n/**\r\n * @class CharacterAssetFactory\r\n * @param CharacterAssetCreationOptions\r\n * Uses the returned type from character creation options to create the appropriate cc.Node derived asset\r\n *\r\n */\r\nvar CharacterAssetFactory = (function () {\r\n    function CharacterAssetFactory() {\r\n    }\r\n    CharacterAssetFactory.prototype.create = function (options) {\r\n        switch (options.getType()) {\r\n            case AssetTypes_1.CharacterAssetTypes.NPC:\r\n                return new MockAsset_1.MockAsset(options, 50, MockAsset_1.MockAssetColours.PINK, \"NPC\");\r\n            case AssetTypes_1.CharacterAssetTypes.NPC_MOCK:\r\n                return new MockAsset_1.MockAsset(options, 50, MockAsset_1.MockAssetColours.PINK, \"NPC MOCK\");\r\n            case AssetTypes_1.CharacterAssetTypes.PLAYER:\r\n                return new MockAsset_1.MockAsset(options, 50, MockAsset_1.MockAssetColours.GREEN, \"PLAYER\");\r\n            case AssetTypes_1.CharacterAssetTypes.PLAYER_MOCK:\r\n                return new MockAsset_1.MockAsset(options, 50, MockAsset_1.MockAssetColours.GREEN, \"PLAYER MOCK\");\r\n        }\r\n    };\r\n    return CharacterAssetFactory;\r\n}());\r\nexports.CharacterAssetFactory = CharacterAssetFactory;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./factory/view/CharacterAssetFactory.ts\n// module id = 4\n// module chunks = 0\n\n//# sourceURL=webpack:///./factory/view/CharacterAssetFactory.ts?");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CharacterAssetTypes;\r\n(function (CharacterAssetTypes) {\r\n    CharacterAssetTypes[CharacterAssetTypes[\"PLAYER\"] = 0] = \"PLAYER\";\r\n    CharacterAssetTypes[CharacterAssetTypes[\"NPC\"] = 1] = \"NPC\";\r\n    CharacterAssetTypes[CharacterAssetTypes[\"PLAYER_MOCK\"] = 2] = \"PLAYER_MOCK\";\r\n    CharacterAssetTypes[CharacterAssetTypes[\"NPC_MOCK\"] = 3] = \"NPC_MOCK\";\r\n})(CharacterAssetTypes = exports.CharacterAssetTypes || (exports.CharacterAssetTypes = {}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./types/AssetTypes.ts\n// module id = 5\n// module chunks = 0\n\n//# sourceURL=webpack:///./types/AssetTypes.ts?");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ApplicationEvents_1 = __webpack_require__(0);\r\nvar SplashScreenViewController_1 = __webpack_require__(16);\r\nvar SplashScreenView_1 = __webpack_require__(15);\r\nvar Display_1 = __webpack_require__(8);\r\nvar GameView_1 = __webpack_require__(13);\r\nvar GameController_1 = __webpack_require__(10);\r\nvar GameViewController_1 = __webpack_require__(14);\r\nvar CharacterAssetFactory_1 = __webpack_require__(4);\r\nvar Application2 = (function () {\r\n    function Application2() {\r\n    }\r\n    Application2.prototype.startUp = function () {\r\n        this._system = new dijon.System();\r\n        this._system.autoMapOutlets = true;\r\n        /**\r\n         * map the dijion containner to a global outlet named _system so that it may be injected into any class\r\n         * that has the \"_system\" mapping\r\n         */\r\n        this._system.mapValue(\"_system\", this._system);\r\n        //this._system.mapOutlet('_system');\r\n        /**\r\n         * map the game controller as a singleton\r\n         * the game controller will provide application wide functionality\r\n         */\r\n        this._system.mapSingleton(\"GameController\", GameController_1.GameController);\r\n        var gc = this._system.getObject(\"GameController\");\r\n        /**\r\n         * map the character asset factory as a singleton\r\n         *\r\n         */\r\n        this._system.mapSingleton(\"_characterAssetFactory\", CharacterAssetFactory_1.CharacterAssetFactory);\r\n        /**\r\n        * map the display utility class as a singleton\r\n        *\r\n        */\r\n        this._system.mapSingleton(\"_display\", Display_1.Display);\r\n        /**\r\n         * initialise the splash screen view and its contoller\r\n         * first we map our SplashScreenView and SplashScreenViewController classes to class identifiers holding the same name\r\n         * then we map the SplashScreenViews _viewcontroller to SplashScreenViewController\r\n         * When an instance of game view is created a corresponding instance of SplashScreenViewController is injected into its _viewController property\r\n         */\r\n        this._system.mapClass(\"SplashScreenView\", SplashScreenView_1.SplashScreenView);\r\n        this._system.mapClass(\"SplashScreenViewController\", SplashScreenViewController_1.SplashScreenViewController);\r\n        this._system.mapOutlet(\"SplashScreenViewController\", \"SplashScreenView\", \"_viewController\");\r\n        /**\r\n         * initialise the game view and its contoller\r\n         * first we map our GameView and GameViewController classes to class identifiers holding the same name\r\n         * then we map the GameViews _viewcontroller to GameViewController\r\n         * When an instance of game view is created a corresponding instance of GameViewController is injected into its _viewController property\r\n         */\r\n        this._system.mapClass(\"GameView\", GameView_1.GameView);\r\n        this._system.mapClass(\"GameViewController\", GameViewController_1.GameViewController);\r\n        this._system.mapOutlet(\"GameViewController\", \"GameView\", \"_viewController\");\r\n        /**\r\n         * map the GameController::onAppStartupComplete function as a handler for the ApplicationEvents.APP_STARTUP_COMPLETE event\r\n         */\r\n        this._system.mapHandler(ApplicationEvents_1.ApplicationEvents.APP_STARTUP_COMPLETE, 'GameController', 'onAppStartupComplete');\r\n        /**\r\n         * map the GameController::onAppGoToPlayScene function as a handler for the ApplicationEvents.APP_GOTO_PLAY_SCENE event\r\n         */\r\n        this._system.mapHandler(ApplicationEvents_1.ApplicationEvents.APP_GOTO_PLAY_SCENE, 'GameController', 'onAppGoToPlayScene');\r\n        /**\r\n         * map the GameController::onAppGoToPlayScene function as a handler for the ApplicationEvents.APP_GOTO_PLAY_SCENE event\r\n         */\r\n        this._system.mapHandler(ApplicationEvents_1.ApplicationEvents.APP_GOTO_SPLASH_SCENE, 'GameController', 'onAppGoToSplashScene');\r\n        /**\r\n         * fire app:startup event\r\n         */\r\n        this._system.notify(ApplicationEvents_1.ApplicationEvents.APP_STARTUP);\r\n        /**\r\n      * fire app:startupComplete event\r\n      */\r\n        this._system.notify(ApplicationEvents_1.ApplicationEvents.APP_STARTUP_COMPLETE);\r\n    };\r\n    return Application2;\r\n}());\r\nexports.Application2 = Application2;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Application2.ts\n// module id = 6\n// module chunks = 0\n\n//# sourceURL=webpack:///./Application2.ts?");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description Virtual class - must be subclassed, the show  function must be overriden\r\n */\r\nvar View = (function () {\r\n    function View() {\r\n        /**\r\n         * @description the _viewController will be injected by the IOC container when this view is instantiated\r\n         */\r\n        //inject\r\n        this._viewController = undefined;\r\n        //inject      \r\n        this._viewModel = undefined;\r\n    }\r\n    /**\r\n     * @description setup. this function is called after the class is instantiaved via the IOC container\r\n     */\r\n    View.prototype.setup = function () {\r\n        this._viewEventBus = new signals.Signal();\r\n        this._enterSignal = new signals.Signal();\r\n        this._exitSignal = new signals.Signal();\r\n        this._enterTransitionDidFinishSignal = new signals.Signal();\r\n        this._exitTransitionDidStartSignal = new signals.Signal();\r\n        this._viewController.viewReady(this, this._viewModel);\r\n    };\r\n    /**\r\n     * @description adds lifecycle listeners to this views (INodeLifeCycleExtensions) asset\r\n     *\r\n     */\r\n    View.prototype.initLifecycleListeners = function () {\r\n        var ass = this.getAsset();\r\n        ass.onEnterSignal.add(this.onEnter, this);\r\n        ass.onEnterTransitionDidFinishSignal.add(this.onEnterTransitionDidFinish, this);\r\n        ass.onExitSignal.add(this.onExit, this);\r\n        ass.onExitTransitionDidStartSignal.add(this.onExitTransitionDidStart, this);\r\n    };\r\n    /**\r\n     * @description removes lifecycle listeners to this views (INodeLifeCycleExtensions) asset\r\n     *\r\n     */\r\n    View.prototype.removeLifeCycleListeners = function () {\r\n        var ass = this.getAsset();\r\n        ass.onEnterSignal.removeAll();\r\n        ass.onEnterTransitionDidFinishSignal.removeAll();\r\n        ass.onExitSignal.removeAll();\r\n        ass.onExitTransitionDidStartSignal.removeAll();\r\n    };\r\n    View.prototype.onEnter = function () {\r\n        this.onEnterHandler();\r\n        this._enterSignal.dispatch();\r\n    };\r\n    View.prototype.onExit = function () {\r\n        this.onExitHandler();\r\n        this._exitSignal.dispatch();\r\n    };\r\n    View.prototype.onEnterTransitionDidFinish = function () {\r\n        this.onEnterTransitionDidFinishHandler();\r\n    };\r\n    View.prototype.onExitTransitionDidStart = function () {\r\n        this.onExitTransitionDidStartHandler();\r\n    };\r\n    /**\r\n     * @description optionally override  to handle the views main asset's (cc.Node) onEnter life cycle event\r\n     */\r\n    View.prototype.onEnterHandler = function () {\r\n    };\r\n    /**\r\n     * @description optionally override  to handle the views main asset's (cc.Node) onEnterTransitionDidFinish life cycle event\r\n     */\r\n    View.prototype.onEnterTransitionDidFinishHandler = function () {\r\n    };\r\n    /**\r\n     * @description optionally override  to handle the views main asset's (cc.Node) onExit life cycle event\r\n     */\r\n    View.prototype.onExitHandler = function () {\r\n    };\r\n    /**\r\n     * @description optionally override  to handle the views main asset's (cc.Node) onExitTransitionDidStart life cycle event\r\n     */\r\n    View.prototype.onExitTransitionDidStartHandler = function () {\r\n    };\r\n    /**\r\n     * @description returns the signals.Signal that represents this views eventBus, you may use this Signal to subscribe to view events\r\n     *\r\n     */\r\n    View.prototype.getEventBus = function () {\r\n        return this._viewEventBus;\r\n    };\r\n    /**\r\n     * @description returns the signals.Signal that represents this view onExitevent\r\n     * @see cc.Node:onExit\r\n     */\r\n    View.prototype.getExitSignal = function () {\r\n        return this._exitSignal;\r\n    };\r\n    /**\r\n* @description returns the signals.Signal that represents this view onEnter event\r\n* @see cc.Node:onEnter\r\n*/\r\n    View.prototype.getEnterSignal = function () {\r\n        return this._enterSignal;\r\n    };\r\n    /**\r\n         * @description returns the signals.Signal that represents this views main asset's onExitTransitionDidStart event\r\n         * @see cc.Node:onExit\r\n         */\r\n    View.prototype.getExitTransitionDidStartSignal = function () {\r\n        return this._exitTransitionDidStartSignal;\r\n    };\r\n    /**\r\n     * @description returns the signals.Signal that represents this views main asset's  onEnterTransitionDidFinish event\r\n     * @see cc.Node:onEnter\r\n     */\r\n    View.prototype.getEnterTransitionDidFinishSignal = function () {\r\n        return this._enterTransitionDidFinishSignal;\r\n    };\r\n    /**\r\n     * @description returns the main asset for this view\r\n     * @returns cc.Node\r\n     */\r\n    View.prototype.getAsset = function () {\r\n        return this._asset;\r\n    };\r\n    /**\r\n    * @description sets the main asset for this view\r\n    * @param cc.Node\r\n    */\r\n    View.prototype.setAsset = function (node) {\r\n        this._asset = node;\r\n    };\r\n    /**\r\n     * @description adds a node as a child to this views _asset\r\n    * @param {cc.Node} child  A child node\r\n    * @param {number} [localZOrder]  Z order for drawing priority. Please refer to setZOrder(int)\r\n    * @param {number|string} [tag]  An integer or a name to identify the node easily. Please refer to setTag(int) and setName(string)\r\n     */\r\n    View.prototype.addChild = function (child, localZOrder, tag) {\r\n        this._asset.addChild(child, localZOrder, tag);\r\n    };\r\n    /**\r\n     * @description displays the view on screen (pure virtual/abstract function) - must be overriden\r\n     *\r\n     * @param cc.Node  - optional parent node\r\n     */\r\n    View.prototype.show = function (parent) {\r\n        throw (new Error(\"View:show is an abstract function. It must be overridden\"));\r\n    };\r\n    return View;\r\n}());\r\nexports.View = View;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/View.ts\n// module id = 7\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/View.ts?");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description utility class for obtaining information about the the cocos2d-x display\r\n *\r\n */\r\nvar Display = (function () {\r\n    function Display() {\r\n    }\r\n    /**\r\n     * @returns {cc.Point} - the top left of the visible portion of the screen\r\n     */\r\n    Display.prototype.topLeft = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x, porigin.y + sz.height);\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the top right of the visible portion of the screen\r\n     */\r\n    Display.prototype.topRight = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + sz.width, porigin.y + sz.height);\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the top middle of the visible portion of the screen\r\n     */\r\n    Display.prototype.topMiddle = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width / 2), porigin.y + sz.height);\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the middle left of the visible portion of the screen\r\n     */\r\n    Display.prototype.middleLeft = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x, porigin.y + (sz.height / 2));\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the middle middle of the visible portion of the screen\r\n     */\r\n    Display.prototype.middleMiddle = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width / 2), porigin.y + (sz.height / 2));\r\n    };\r\n    /**\r\n   * @returns {cc.Point} - the middle right of the visible portion of the screen\r\n   */\r\n    Display.prototype.middleRight = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width), porigin.y + (sz.height / 2));\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the bottom left of the visible portion of the screen\r\n     */\r\n    Display.prototype.bottomLeft = function () {\r\n        return cc.director.getVisibleOrigin();\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the bottom middle of the visible portion of the screen\r\n     */\r\n    Display.prototype.bottomMiddle = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width / 2), porigin.y);\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the bottom right of the visible portion of the screen\r\n     */\r\n    Display.prototype.bottomRight = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width), porigin.y);\r\n    };\r\n    /**\r\n     * @returns {Number} - the height of the visible portion of the screen\r\n     */\r\n    Display.prototype.screenHeight = function () {\r\n        var sz = cc.director.getVisibleSize();\r\n        return sz.height;\r\n    };\r\n    /**\r\n    * @returns {Number} - the width of the visible portion of the screen\r\n    */\r\n    Display.prototype.screenWidth = function () {\r\n        var sz = cc.director.getVisibleSize();\r\n        return sz.width;\r\n    };\r\n    /**\r\n     * @returns {Number} - the design resolution height\r\n     */\r\n    Display.prototype.designResolutionHeight = function () {\r\n        var sz = cc.view.getDesignResolutionSize();\r\n        return sz.height;\r\n    };\r\n    /**\r\n     * @returns {Number} - the design resolution width\r\n     */\r\n    Display.prototype.designResolutionWidth = function () {\r\n        var sz = cc.view.getDesignResolutionSize();\r\n        return sz.width;\r\n    };\r\n    /**\r\n     * @param {Number} id - the constant representing the desired position on screen for example Display.BOTTOM_RIGHT | Display.MIDDLE_LEFT etc.\r\n     * @returns {Number} - the design resolution width\r\n     */\r\n    Display.prototype.getPosition = function (id) {\r\n        switch (id) {\r\n            case Display.BOTTOM_RIGHT:\r\n                return this.bottomRight();\r\n            case Display.BOTTOM_MIDDLE:\r\n                return this.bottomMiddle();\r\n            case Display.BOTTOM_LEFT:\r\n                return this.bottomLeft();\r\n            case Display.MIDDLE_RIGHT:\r\n                return this.middleRight();\r\n            case Display.MIDDLE_MIDDLE:\r\n                return this.middleMiddle();\r\n            case Display.MIDDLE_LEFT:\r\n                return this.middleLeft();\r\n            case Display.TOP_MIDDLE:\r\n                return this.topMiddle();\r\n            case Display.TOP_RIGHT:\r\n                return this.topRight();\r\n            case Display.TOP_LEFT:\r\n                return this.topLeft();\r\n        }\r\n    };\r\n    return Display;\r\n}());\r\nDisplay.BOTTOM_RIGHT = 0;\r\nDisplay.BOTTOM_MIDDLE = 1;\r\nDisplay.BOTTOM_LEFT = 2;\r\nDisplay.MIDDLE_RIGHT = 3;\r\nDisplay.MIDDLE_MIDDLE = 4;\r\nDisplay.MIDDLE_LEFT = 5;\r\nDisplay.TOP_MIDDLE = 6;\r\nDisplay.TOP_RIGHT = 7;\r\nDisplay.TOP_LEFT = 8;\r\nexports.Display = Display;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/util/Display.ts\n// module id = 8\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/util/Display.ts?");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Application2_1 = __webpack_require__(6);\r\nexports.App = new Application2_1.Application2();\r\n/**\r\n * @desc exposed directly to the globally scoped library variable configured in your webpack options\r\n * called by the cocos2dx entry scene\r\n * @see webpackconfig.js  {library:\"CocosTSGame\"}\r\n *\r\n */\r\nfunction start() {\r\n    exports.App.startUp();\r\n}\r\nexports.start = start;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Bootstrap.ts\n// module id = 9\n// module chunks = 0\n\n//# sourceURL=webpack:///./Bootstrap.ts?");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ScreenTypes_1 = __webpack_require__(12);\r\nvar GameController = (function () {\r\n    function GameController() {\r\n        //inject\r\n        this._system = undefined;\r\n    }\r\n    /**\r\n     *  handler for the ApplicationEvents.APP_STARTUP_COMPLETE event\r\n     */\r\n    GameController.prototype.onAppStartupComplete = function () {\r\n        console.log(\"GameController::onAppStartupComplete\");\r\n        this.onDoNavigation(ScreenTypes_1.ScreenTypes.SPLASH_SCREEN);\r\n    };\r\n    /**\r\n     *  handler for the ApplicationEvents.APP_GOTO_PLAY_SCENE event\r\n     */\r\n    GameController.prototype.onAppGoToPlayScene = function () {\r\n        this.onDoNavigation(ScreenTypes_1.ScreenTypes.GAMEPLAY_SCREEN);\r\n    };\r\n    /**\r\n         *  handler for the ApplicationEvents.APP_GOTO_SPLASH_SCENE event\r\n         */\r\n    GameController.prototype.onAppGoToSplashScene = function () {\r\n        this.onDoNavigation(ScreenTypes_1.ScreenTypes.SPLASH_SCREEN);\r\n    };\r\n    /**\r\n     *  handler for the app:doNavigation event\r\n     */\r\n    GameController.prototype.onDoNavigation = function (gotoScreen) {\r\n        switch (gotoScreen) {\r\n            case ScreenTypes_1.ScreenTypes.SPLASH_SCREEN:\r\n                if (this._splashScreenView == null)\r\n                    this._splashScreenView = this._system.getObject(\"SplashScreenView\");\r\n                this._splashScreenView.show();\r\n                break;\r\n            case ScreenTypes_1.ScreenTypes.GAMEPLAY_SCREEN:\r\n                if (this._gameView == null)\r\n                    this._gameView = this._system.getObject(\"GameView\");\r\n                this._gameView.show();\r\n                break;\r\n        }\r\n    };\r\n    return GameController;\r\n}());\r\nexports.GameController = GameController;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./controller/GameController.ts\n// module id = 10\n// module chunks = 0\n\n//# sourceURL=webpack:///./controller/GameController.ts?");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description emum providing identifiable colour options for MockAsset\r\n */\r\nvar MockAssetColours;\r\n(function (MockAssetColours) {\r\n    MockAssetColours[MockAssetColours[\"RED\"] = 0] = \"RED\";\r\n    MockAssetColours[MockAssetColours[\"BLUE\"] = 1] = \"BLUE\";\r\n    MockAssetColours[MockAssetColours[\"YELLOW\"] = 2] = \"YELLOW\";\r\n    MockAssetColours[MockAssetColours[\"GREEN\"] = 3] = \"GREEN\";\r\n    MockAssetColours[MockAssetColours[\"PINK\"] = 4] = \"PINK\";\r\n    MockAssetColours[MockAssetColours[\"NONE\"] = 5] = \"NONE\";\r\n})(MockAssetColours = exports.MockAssetColours || (exports.MockAssetColours = {}));\r\n;\r\n/**\r\n * @class MockAsset\r\n * @description a cc.Node derived class for creating mock assets ,creates a circle with given radius, containing a label with optional  text\r\n * Template option T is for the Type used to describe type generally string | int | enumtype\r\n */\r\nvar MockAsset = (function (_super) {\r\n    __extends(MockAsset, _super);\r\n    function MockAsset(config, radius, COLOUR, text) {\r\n        if (radius === void 0) { radius = 20; }\r\n        if (COLOUR === void 0) { COLOUR = MockAssetColours.BLUE; }\r\n        if (text === void 0) { text = \"Text\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this._visibleNode = null;\r\n        _this._objecttype = null;\r\n        _this.ctor();\r\n        _this._objecttype = config.getType();\r\n        _this.setName(config.getName());\r\n        _this.setContentSize(radius * 2, radius * 2);\r\n        _this.setAnchorPoint(0.5, 0.5);\r\n        _this._circleNode = new cc.DrawNode();\r\n        _this._circleNode.drawDot(cc.p(radius, radius), radius, _this.getColour(COLOUR));\r\n        _this.addChild(_this._circleNode);\r\n        var textF = new ccui.Text();\r\n        textF.boundingWidth = radius * 2;\r\n        textF.boundingHeight = 30;\r\n        textF.attr({\r\n            textAlign: cc.TEXT_ALIGNMENT_CENTER,\r\n            string: text,\r\n            font: \"20px Ariel\",\r\n            x: radius\r\n        });\r\n        textF.y = radius - textF.height / 8;\r\n        _this.addChild(textF);\r\n        return _this;\r\n    }\r\n    MockAsset.prototype.getColour = function (colour) {\r\n        switch (colour) {\r\n            case MockAssetColours.RED:\r\n                return new cc.Color(187, 56, 10, 255);\r\n            case MockAssetColours.GREEN:\r\n                return new cc.Color(12, 123, 2, 255);\r\n            case MockAssetColours.BLUE:\r\n                return new cc.Color(27, 68, 174, 255);\r\n            case MockAssetColours.PINK:\r\n                return new cc.Color(211, 62, 109, 255);\r\n            case MockAssetColours.YELLOW:\r\n                return new cc.Color(242, 171, 52, 255);\r\n            case MockAssetColours.NONE:\r\n                return new cc.Color(255, 255, 255, 255);\r\n        }\r\n    };\r\n    return MockAsset;\r\n}(cc.Node));\r\nexports.MockAsset = MockAsset;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./factory/view/characterassetfactory/MockAsset.ts\n// module id = 11\n// module chunks = 0\n\n//# sourceURL=webpack:///./factory/view/characterassetfactory/MockAsset.ts?");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ScreenTypes;\r\n(function (ScreenTypes) {\r\n    ScreenTypes[ScreenTypes[\"SPLASH_SCREEN\"] = 0] = \"SPLASH_SCREEN\";\r\n    ScreenTypes[ScreenTypes[\"GAMEPLAY_SCREEN\"] = 1] = \"GAMEPLAY_SCREEN\";\r\n})(ScreenTypes = exports.ScreenTypes || (exports.ScreenTypes = {}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./types/ScreenTypes.ts\n// module id = 12\n// module chunks = 0\n\n//# sourceURL=webpack:///./types/ScreenTypes.ts?");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SceneView_1 = __webpack_require__(2);\r\nvar GameViewScene_1 = __webpack_require__(17);\r\nvar GameView = (function (_super) {\r\n    __extends(GameView, _super);\r\n    function GameView() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        //inject\r\n        _this._display = undefined;\r\n        return _this;\r\n    }\r\n    GameView.prototype.show = function (parent) {\r\n        this.setAsset(new GameViewScene_1.GameViewScene());\r\n        this.initLifecycleListeners();\r\n        cc.director.runScene(this.getAsset());\r\n    };\r\n    GameView.prototype.onEnterHandler = function () {\r\n        cc.log(\"GameView:onEnterHandler\");\r\n        var button = new ccui.Button();\r\n        button.setTitleText(\"Exit Game\");\r\n        button.setTouchEnabled(true);\r\n        button.addTouchEventListener(this.touchEvent, this);\r\n        button.setName(\"exitGameButton\");\r\n        button.setPosition(this._display.topRight().x - 50, this._display.topRight().y - 50);\r\n        this.addChild(button, 0);\r\n    };\r\n    GameView.prototype.touchEvent = function (sender, type) {\r\n        switch (type) {\r\n            case ccui.Widget.TOUCH_BEGAN:\r\n                break;\r\n            case ccui.Widget.TOUCH_MOVED:\r\n                break;\r\n            case ccui.Widget.TOUCH_ENDED:\r\n                cc.log(sender.getName() + \" pressed\");\r\n                switch (sender.getName()) {\r\n                    case \"exitGameButton\":\r\n                        this._viewEventBus.dispatch(\"exitGameButtonPressed\");\r\n                        break;\r\n                }\r\n                break;\r\n            case ccui.Widget.TOUCH_CANCELED:\r\n                break;\r\n        }\r\n    };\r\n    GameView.prototype.onEnterTransitionDidFinishHandler = function () {\r\n    };\r\n    GameView.prototype.onExitHandler = function () {\r\n        cc.log(\"GameView:onExithandler\");\r\n        this.removeLifeCycleListeners();\r\n        this.setAsset(null);\r\n    };\r\n    GameView.prototype.onExitTransitionDidStartHandler = function () {\r\n    };\r\n    return GameView;\r\n}(SceneView_1.SceneView));\r\nexports.GameView = GameView;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/GameView.ts\n// module id = 13\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/GameView.ts?");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ViewController_1 = __webpack_require__(3);\r\nvar ApplicationEvents_1 = __webpack_require__(0);\r\nvar AssetTypes_1 = __webpack_require__(5);\r\nvar CharacterAssetFactory_1 = __webpack_require__(4);\r\nvar GameViewController = (function (_super) {\r\n    __extends(GameViewController, _super);\r\n    function GameViewController() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        //inject\r\n        _this._characterAssetFactory = null;\r\n        //inject\r\n        _this._display = undefined;\r\n        return _this;\r\n    }\r\n    GameViewController.prototype.onViewReady = function () {\r\n        this.getView().getEventBus().add(this.onViewEvent, this);\r\n        this.getView().getEnterSignal().add(this.onViewEnter, this);\r\n        this.getView().getExitSignal().add(this.onViewExit, this);\r\n        this.getView().getEnterTransitionDidFinishSignal().add(this.onViewEnterTransitionDidFinish, this);\r\n        this.getView().getExitTransitionDidStartSignal().add(this.onViewExitTransitionDidStart, this);\r\n    };\r\n    GameViewController.prototype.onViewEnter = function () {\r\n        cc.log(\"GameViewController::onViewEnter\");\r\n        var co = new CharacterAssetFactory_1.CharacterAssetCreationOptions(AssetTypes_1.CharacterAssetTypes.PLAYER, \"player\");\r\n        var ca = this._characterAssetFactory.create(co);\r\n        ca.setPosition(this._display.middleMiddle().x, this._display.middleMiddle().y);\r\n        this.getView().addChild(ca, 0);\r\n        var c2 = new CharacterAssetFactory_1.CharacterAssetCreationOptions(AssetTypes_1.CharacterAssetTypes.NPC, \"enemy\");\r\n        var cb = this._characterAssetFactory.create(c2);\r\n        cb.setPosition(this._display.middleMiddle().x, this._display.middleMiddle().y - 100);\r\n        cc.log(\"cb2\");\r\n        this.getView().addChild(cb, 1);\r\n    };\r\n    GameViewController.prototype.onViewEnterTransitionDidFinish = function () {\r\n        cc.log(\"GameViewController::onViewEnterTransitionDidFinish\");\r\n    };\r\n    GameViewController.prototype.onViewExit = function () {\r\n        cc.log(\"GameViewController::onViewExit\");\r\n    };\r\n    GameViewController.prototype.onViewExitTransitionDidStart = function () {\r\n        cc.log(\"GameViewController::onViewExitTransitionDidStart\");\r\n    };\r\n    GameViewController.prototype.onViewEvent = function (event) {\r\n        switch (event) {\r\n            case \"exitGameButtonPressed\":\r\n                this._system.notify(ApplicationEvents_1.ApplicationEvents.APP_GOTO_SPLASH_SCENE);\r\n                break;\r\n        }\r\n    };\r\n    return GameViewController;\r\n}(ViewController_1.ViewController));\r\nexports.GameViewController = GameViewController;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/GameViewController.ts\n// module id = 14\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/GameViewController.ts?");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SceneView_1 = __webpack_require__(2);\r\nvar SplashScreenViewScene_1 = __webpack_require__(18);\r\nvar SplashScreenView = (function (_super) {\r\n    __extends(SplashScreenView, _super);\r\n    function SplashScreenView() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        //inject\r\n        _this._display = undefined;\r\n        return _this;\r\n    }\r\n    SplashScreenView.prototype.show = function (parent) {\r\n        this.setAsset(new SplashScreenViewScene_1.SplashScreenViewScene());\r\n        this.initLifecycleListeners();\r\n        cc.director.runScene(this.getAsset());\r\n    };\r\n    SplashScreenView.prototype.onEnterHandler = function () {\r\n        cc.log(\"SplashScreenView:onEnterHandler\");\r\n        var button = new ccui.Button();\r\n        button.setTitleText(\"Play Game\");\r\n        button.setTouchEnabled(true);\r\n        button.addTouchEventListener(this.touchEvent, this);\r\n        button.setName(\"playGameButton\");\r\n        button.setPosition(this._display.middleMiddle().x, this._display.middleMiddle().y);\r\n        this.addChild(button, 0);\r\n    };\r\n    SplashScreenView.prototype.onEnterTransitionDidFinishHandler = function () {\r\n        cc.log(\"SplashScreenView::onEnterTransitionDidFinishHandler\");\r\n    };\r\n    SplashScreenView.prototype.onExitHandler = function () {\r\n        cc.log(\"SplashScreenView:onExitHandler\");\r\n        this.removeLifeCycleListeners();\r\n        this.setAsset(null);\r\n    };\r\n    SplashScreenView.prototype.onExitTransitionDidStartHandler = function () {\r\n        cc.log(\"SplashScreenView::onExitTransitionDidStartHandler\");\r\n    };\r\n    SplashScreenView.prototype.touchEvent = function (sender, type) {\r\n        switch (type) {\r\n            case ccui.Widget.TOUCH_BEGAN:\r\n                break;\r\n            case ccui.Widget.TOUCH_MOVED:\r\n                break;\r\n            case ccui.Widget.TOUCH_ENDED:\r\n                switch (sender.getName()) {\r\n                    case \"playGameButton\":\r\n                        this._viewEventBus.dispatch(\"playGameButtonPressed\");\r\n                        break;\r\n                }\r\n                break;\r\n            case ccui.Widget.TOUCH_CANCELED:\r\n                break;\r\n        }\r\n    };\r\n    return SplashScreenView;\r\n}(SceneView_1.SceneView));\r\nexports.SplashScreenView = SplashScreenView;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/SplashScreenView.ts\n// module id = 15\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/SplashScreenView.ts?");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ViewController_1 = __webpack_require__(3);\r\nvar ApplicationEvents_1 = __webpack_require__(0);\r\nvar SplashScreenViewController = (function (_super) {\r\n    __extends(SplashScreenViewController, _super);\r\n    function SplashScreenViewController() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        //inject\r\n        _this._display = undefined;\r\n        return _this;\r\n    }\r\n    SplashScreenViewController.prototype.onViewReady = function () {\r\n        this.getView().getEventBus().add(this.onViewEvent, this);\r\n        this.getView().getEnterSignal().add(this.onViewEnter, this);\r\n        this.getView().getExitSignal().add(this.onViewExit, this);\r\n        this.getView().getEnterTransitionDidFinishSignal().add(this.onViewEnterTransitionDidFinish, this);\r\n        this.getView().getExitTransitionDidStartSignal().add(this.onViewExitTransitionDidStart, this);\r\n    };\r\n    SplashScreenViewController.prototype.onViewEnter = function () {\r\n        cc.log(\"SplashScreenViewController::onViewEnter\");\r\n    };\r\n    SplashScreenViewController.prototype.onViewEnterTransitionDidFinish = function () {\r\n        cc.log(\"SplashScreenViewController::onViewEnterTransitionDidFinish\");\r\n    };\r\n    SplashScreenViewController.prototype.onViewExit = function () {\r\n        cc.log(\"SplashScreenViewController::onViewExit\");\r\n    };\r\n    SplashScreenViewController.prototype.onViewExitTransitionDidStart = function () {\r\n        cc.log(\"SplashScreenViewController::onViewExitTransitionDidStart\");\r\n    };\r\n    SplashScreenViewController.prototype.onViewEvent = function (event) {\r\n        switch (event) {\r\n            case \"playGameButtonPressed\":\r\n                this._system.notify(ApplicationEvents_1.ApplicationEvents.APP_GOTO_PLAY_SCENE);\r\n                break;\r\n        }\r\n    };\r\n    return SplashScreenViewController;\r\n}(ViewController_1.ViewController));\r\nexports.SplashScreenViewController = SplashScreenViewController;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/SplashScreenViewController.ts\n// module id = 16\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/SplashScreenViewController.ts?");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SceneExtended_1 = __webpack_require__(1);\r\nvar GameViewScene = (function (_super) {\r\n    __extends(GameViewScene, _super);\r\n    function GameViewScene() {\r\n        // 1. super init first\r\n        return _super.call(this) || this;\r\n        //super.ctor(); //always call this for compatibility with cocos2dx JS Javascript class system\r\n    }\r\n    return GameViewScene;\r\n}(SceneExtended_1.SceneExtended));\r\nexports.GameViewScene = GameViewScene;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/scenes/GameViewScene.ts\n// module id = 17\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/scenes/GameViewScene.ts?");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SceneExtended_1 = __webpack_require__(1);\r\nvar SplashScreenViewScene = (function (_super) {\r\n    __extends(SplashScreenViewScene, _super);\r\n    function SplashScreenViewScene() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return SplashScreenViewScene;\r\n}(SceneExtended_1.SceneExtended));\r\nexports.SplashScreenViewScene = SplashScreenViewScene;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/scenes/SplashScreenViewScene.ts\n// module id = 18\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/scenes/SplashScreenViewScene.ts?");

/***/ })
/******/ ]);