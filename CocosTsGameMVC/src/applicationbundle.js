var CocosTSGame =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "D:\\starting-typescript-and-cocos2dx\\CocosTsGameMVC/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 24);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GameComponentTypes = (function () {\r\n    function GameComponentTypes() {\r\n    }\r\n    return GameComponentTypes;\r\n}());\r\nGameComponentTypes.POSITION = \"pos\";\r\nGameComponentTypes.STATE = \"state\";\r\nGameComponentTypes.SCRIPTED_NPC_AI = \"scr_npc_ai\";\r\nGameComponentTypes.COCOS_RENDER_NODE = \"c_r_n\";\r\nGameComponentTypes.PLAYER_INPUT = \"ply_in\";\r\nGameComponentTypes.PLAYER = \"plyer\";\r\nGameComponentTypes.NPC = \"plyer\";\r\nGameComponentTypes.PLAYER_INPUT_EVENT = \"ply_in_evt\";\r\nexports.GameComponentTypes = GameComponentTypes;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./types/GameComponentTypes.ts\n// module id = 0\n// module chunks = 0\n\n//# sourceURL=webpack:///./types/GameComponentTypes.ts?");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * The system is responsible for updating the entities.\r\n * @class\r\n */\r\nvar System = (function () {\r\n    function System() {\r\n        this.world = null;\r\n    }\r\n    System.prototype.addedToWorld = function (world) {\r\n        this.world = world;\r\n    };\r\n    System.prototype.removedFromWorld = function () {\r\n        this.world = null;\r\n    };\r\n    /**\r\n     * Update the entities.\r\n     * @public\r\n     * @param {Number} dt time interval between updates\r\n     */\r\n    System.prototype.update = function (dt) {\r\n        throw new Error('Subclassed should override this method');\r\n    };\r\n    return System;\r\n}());\r\nexports.System = System;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/moon/src/System.ts\n// module id = 1\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/moon/src/System.ts?");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Component_1 = __webpack_require__(19);\r\nvar GameComponentTypes_1 = __webpack_require__(0);\r\n/**\r\n * @class PositionComponent\r\n * @description  wraps a cc.Point to describe an entities position\r\n */\r\nvar PositionComponent = (function (_super) {\r\n    __extends(PositionComponent, _super);\r\n    function PositionComponent() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.name = GameComponentTypes_1.GameComponentTypes.POSITION;\r\n        _this.position = cc.p(0, 0);\r\n        return _this;\r\n    }\r\n    return PositionComponent;\r\n}(Component_1.Component));\r\nexports.PositionComponent = PositionComponent;\r\n/**\r\n * @class StateComponent\r\n * @description   wraps two Statemachine objects for an entities Primary State and Secondary State\r\n */\r\nvar StateComponent = (function (_super) {\r\n    __extends(StateComponent, _super);\r\n    function StateComponent() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.name = GameComponentTypes_1.GameComponentTypes.STATE;\r\n        return _this;\r\n    }\r\n    return StateComponent;\r\n}(Component_1.Component));\r\nexports.StateComponent = StateComponent;\r\n/**\r\n * @class EnemyStateComponent overrides StateComponent to provide  EnemyPrimaryState as primaryState\r\n * @description   wraps two Statemachine objects for an entities Primary State and Secondary State\r\n */\r\nvar EnemyStateComponent = (function (_super) {\r\n    __extends(EnemyStateComponent, _super);\r\n    function EnemyStateComponent() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return EnemyStateComponent;\r\n}(Component_1.Component));\r\nexports.EnemyStateComponent = EnemyStateComponent;\r\n/**\r\n * @class PlayerStateComponent overrides StateComponent to provide  PlayerPrimaryState primaryState\r\n * @description   wraps two Statemachine objects for an entities Primary State and Secondary State\r\n */\r\nvar PlayerStateComponent = (function (_super) {\r\n    __extends(PlayerStateComponent, _super);\r\n    function PlayerStateComponent() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return PlayerStateComponent;\r\n}(Component_1.Component));\r\nexports.PlayerStateComponent = PlayerStateComponent;\r\n/**\r\n * @class ScriptedNPCAI\r\n * @description  identifies an entity as having Scripted AI\r\n */\r\nvar ScriptedNPCAI = (function (_super) {\r\n    __extends(ScriptedNPCAI, _super);\r\n    function ScriptedNPCAI() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.name = GameComponentTypes_1.GameComponentTypes.SCRIPTED_NPC_AI;\r\n        return _this;\r\n    }\r\n    return ScriptedNPCAI;\r\n}(Component_1.Component));\r\nexports.ScriptedNPCAI = ScriptedNPCAI;\r\n/**\r\n * @class CocosRenderNode\r\n * @description  wraps a cc.Node object\r\n */\r\nvar CocosRenderNode = (function (_super) {\r\n    __extends(CocosRenderNode, _super);\r\n    function CocosRenderNode() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.name = GameComponentTypes_1.GameComponentTypes.COCOS_RENDER_NODE;\r\n        _this.positionConstOffset = new cc.Point(0, 0); //constant position offset when using setPosition\r\n        return _this;\r\n    }\r\n    CocosRenderNode.prototype.getPosition = function () {\r\n        return this.node.getPosition();\r\n    };\r\n    CocosRenderNode.prototype.setPosition = function (x, y) {\r\n        var posToSet = null;\r\n        if (y != null) {\r\n            posToSet = cc.p(x, y);\r\n        }\r\n        else\r\n            posToSet = x;\r\n        posToSet = cc.pAdd(posToSet, this.positionConstOffset);\r\n        this.node.setPosition(posToSet);\r\n    };\r\n    return CocosRenderNode;\r\n}(Component_1.Component));\r\nexports.CocosRenderNode = CocosRenderNode;\r\n/**\r\n * @class PlayerInput\r\n * @description  identifies an entity as being a PlayerInput\r\n */\r\nvar PlayerInput = (function (_super) {\r\n    __extends(PlayerInput, _super);\r\n    function PlayerInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.name = GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT;\r\n        return _this;\r\n    }\r\n    return PlayerInput;\r\n}(Component_1.Component));\r\nexports.PlayerInput = PlayerInput;\r\n/**\r\n * @class PlayerInputEvent component\r\n * @description  describes a PlayerInput event\r\n */\r\nvar PlayerInputEvent = (function (_super) {\r\n    __extends(PlayerInputEvent, _super);\r\n    function PlayerInputEvent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT_EVENT;\r\n        _this.positions = [];\r\n        return _this;\r\n    }\r\n    return PlayerInputEvent;\r\n}(Component_1.Component));\r\nexports.PlayerInputEvent = PlayerInputEvent;\r\n/**\r\n * @class Player\r\n * @description  identifies an entity as being a Player\r\n */\r\nvar Player = (function (_super) {\r\n    __extends(Player, _super);\r\n    function Player() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.name = GameComponentTypes_1.GameComponentTypes.PLAYER;\r\n        return _this;\r\n    }\r\n    return Player;\r\n}(Component_1.Component));\r\nexports.Player = Player;\r\n/**\r\n * @class NPC\r\n * @description  identifies an entity as being an NPC\r\n */\r\nvar NPC = (function (_super) {\r\n    __extends(NPC, _super);\r\n    function NPC() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.name = GameComponentTypes_1.GameComponentTypes.NPC;\r\n        return _this;\r\n    }\r\n    return NPC;\r\n}(Component_1.Component));\r\nexports.NPC = NPC;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/GameComponents.ts\n// module id = 2\n// module chunks = 0\n\n//# sourceURL=webpack:///./component/GameComponents.ts?");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ApplicationEvents = (function () {\r\n    function ApplicationEvents() {\r\n    }\r\n    return ApplicationEvents;\r\n}());\r\nApplicationEvents.APP_STARTUP = \"App:startup\";\r\nApplicationEvents.APP_STARTUP_COMPLETE = \"App:startupComplete\";\r\nApplicationEvents.APP_GOTO_PLAY_SCENE = \"App:goto:play:scene\";\r\nApplicationEvents.APP_GOTO_SPLASH_SCENE = \"App:goto:splash:scene\";\r\nexports.ApplicationEvents = ApplicationEvents;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./events/ApplicationEvents.ts\n// module id = 3\n// module chunks = 0\n\n//# sourceURL=webpack:///./events/ApplicationEvents.ts?");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SwipeDirections = (function () {\r\n    function SwipeDirections() {\r\n    }\r\n    return SwipeDirections;\r\n}());\r\nSwipeDirections.ERROR = -2;\r\nSwipeDirections.INIT_RETURN = 0;\r\nSwipeDirections.SWIPE_UP = 1;\r\nSwipeDirections.SWIPE_DOWN = 2;\r\nSwipeDirections.SWIPE_LEFT = 3;\r\nSwipeDirections.SWIPE_RIGHT = 4;\r\nSwipeDirections.NOT_SUPPORTED = 5;\r\nSwipeDirections.SWIPE_ANY_DIR = 6;\r\nSwipeDirections.TAP = 7;\r\nexports.SwipeDirections = SwipeDirections;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/gestures/SwipeDirections.ts\n// module id = 4\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/gestures/SwipeDirections.ts?");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @class SceneExtensions -  provides subscribable signal wrappers around scene lifecycle events\r\n * onEnter\r\n * onEnterTransitionDidFinish\r\n * onExit\r\n * onExitTransitionDidStart\r\n */\r\nvar SceneExtended = (function (_super) {\r\n    __extends(SceneExtended, _super);\r\n    function SceneExtended() {\r\n        var _this = _super.call(this) || this;\r\n        _super.prototype.ctor.call(_this); //always call this for compatibility with cocos2dx JS Javascript class system\r\n        _this.onEnterSignal = new signals.Signal();\r\n        _this.onEnterTransitionDidFinishSignal = new signals.Signal();\r\n        _this.onExitSignal = new signals.Signal();\r\n        _this.onExitTransitionDidStartSignal = new signals.Signal();\r\n        return _this;\r\n    }\r\n    SceneExtended.prototype.onEnter = function () {\r\n        _super.prototype.onEnter.call(this);\r\n        this.onEnterSignal.dispatch();\r\n    };\r\n    SceneExtended.prototype.onEnterTransitionDidFinish = function () {\r\n        _super.prototype.onEnterTransitionDidFinish.call(this);\r\n        this.onEnterTransitionDidFinishSignal.dispatch();\r\n    };\r\n    SceneExtended.prototype.onExit = function () {\r\n        this.onExitSignal.dispatch();\r\n        _super.prototype.onExit.call(this);\r\n    };\r\n    SceneExtended.prototype.onExitTransitionDidStart = function () {\r\n        _super.prototype.onExitTransitionDidStart.call(this);\r\n        this.onExitTransitionDidStartSignal.dispatch();\r\n    };\r\n    return SceneExtended;\r\n}(cc.Scene));\r\nexports.SceneExtended = SceneExtended;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/mvc/SceneExtended.ts\n// module id = 5\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/mvc/SceneExtended.ts?");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description Virtual class - must be subclassed, the show  function must be overriden\r\n */\r\nvar View = (function () {\r\n    function View() {\r\n        /**\r\n         * @description the _viewController will be injected by the IOC container when this view is instantiated\r\n         */\r\n        //inject\r\n        this._viewController = undefined;\r\n        //inject      \r\n        this._viewModel = undefined;\r\n    }\r\n    /**\r\n     * @description setup. this function is called after the class is instantiaved via the IOC container\r\n     */\r\n    View.prototype.setup = function () {\r\n        this._uiEventBus = new signals.Signal();\r\n        this._enterSignal = new signals.Signal();\r\n        this._exitSignal = new signals.Signal();\r\n        this._enterTransitionDidFinishSignal = new signals.Signal();\r\n        this._exitTransitionDidStartSignal = new signals.Signal();\r\n        this._viewController.viewReady(this, this._viewModel);\r\n    };\r\n    /**\r\n     * @description adds lifecycle listeners to this views (INodeLifeCycleExtensions) asset\r\n     *\r\n     */\r\n    View.prototype.initLifecycleListeners = function () {\r\n        var ass = this.getAsset();\r\n        ass.onEnterSignal.add(this.onEnter, this);\r\n        ass.onEnterTransitionDidFinishSignal.add(this.onEnterTransitionDidFinish, this);\r\n        ass.onExitSignal.add(this.onExit, this);\r\n        ass.onExitTransitionDidStartSignal.add(this.onExitTransitionDidStart, this);\r\n    };\r\n    /**\r\n     * @description removes lifecycle listeners to this views (INodeLifeCycleExtensions) asset\r\n     *\r\n     */\r\n    View.prototype.removeLifeCycleListeners = function () {\r\n        var ass = this.getAsset();\r\n        ass.onEnterSignal.removeAll();\r\n        ass.onEnterTransitionDidFinishSignal.removeAll();\r\n        ass.onExitSignal.removeAll();\r\n        ass.onExitTransitionDidStartSignal.removeAll();\r\n    };\r\n    View.prototype.onEnter = function () {\r\n        this.onEnterHandler();\r\n        this._enterSignal.dispatch();\r\n    };\r\n    View.prototype.onExit = function () {\r\n        this.onExitHandler();\r\n        this._exitSignal.dispatch();\r\n    };\r\n    View.prototype.onEnterTransitionDidFinish = function () {\r\n        this.onEnterTransitionDidFinishHandler();\r\n    };\r\n    View.prototype.onExitTransitionDidStart = function () {\r\n        this.onExitTransitionDidStartHandler();\r\n    };\r\n    /**\r\n     * @description optionally override  to handle the views main asset's (cc.Node) onEnter life cycle event\r\n     */\r\n    View.prototype.onEnterHandler = function () {\r\n    };\r\n    /**\r\n     * @description optionally override  to handle the views main asset's (cc.Node) onEnterTransitionDidFinish life cycle event\r\n     */\r\n    View.prototype.onEnterTransitionDidFinishHandler = function () {\r\n    };\r\n    /**\r\n     * @description optionally override  to handle the views main asset's (cc.Node) onExit life cycle event\r\n     */\r\n    View.prototype.onExitHandler = function () {\r\n    };\r\n    /**\r\n     * @description optionally override  to handle the views main asset's (cc.Node) onExitTransitionDidStart life cycle event\r\n     */\r\n    View.prototype.onExitTransitionDidStartHandler = function () {\r\n    };\r\n    /**\r\n     * @description returns the signals.Signal that represents this vie UI  eventBus, you may use this Signal to subscribe to view events\r\n     *\r\n     */\r\n    View.prototype.getUIEventBus = function () {\r\n        return this._uiEventBus;\r\n    };\r\n    /**\r\n     * @description returns the signals.Signal that represents this view onExitevent\r\n     * @see cc.Node:onExit\r\n     */\r\n    View.prototype.getExitSignal = function () {\r\n        return this._exitSignal;\r\n    };\r\n    /**\r\n* @description returns the signals.Signal that represents this view onEnter event\r\n* @see cc.Node:onEnter\r\n*/\r\n    View.prototype.getEnterSignal = function () {\r\n        return this._enterSignal;\r\n    };\r\n    /**\r\n         * @description returns the signals.Signal that represents this views main asset's onExitTransitionDidStart event\r\n         * @see cc.Node:onExit\r\n         */\r\n    View.prototype.getExitTransitionDidStartSignal = function () {\r\n        return this._exitTransitionDidStartSignal;\r\n    };\r\n    /**\r\n     * @description returns the signals.Signal that represents this views main asset's  onEnterTransitionDidFinish event\r\n     * @see cc.Node:onEnter\r\n     */\r\n    View.prototype.getEnterTransitionDidFinishSignal = function () {\r\n        return this._enterTransitionDidFinishSignal;\r\n    };\r\n    /**\r\n     * @description returns the main asset for this view\r\n     * @returns cc.Node\r\n     */\r\n    View.prototype.getAsset = function () {\r\n        return this._asset;\r\n    };\r\n    /**\r\n    * @description sets the main asset for this view\r\n    * @param cc.Node\r\n    */\r\n    View.prototype.setAsset = function (node) {\r\n        this._asset = node;\r\n    };\r\n    /**\r\n     * @description adds a node as a child to this views _asset\r\n    * @param {cc.Node} child  A child node\r\n    * @param {number} [localZOrder]  Z order for drawing priority. Please refer to setZOrder(int)\r\n    * @param {number|string} [tag]  An integer or a name to identify the node easily. Please refer to setTag(int) and setName(string)\r\n     */\r\n    View.prototype.addChild = function (child, localZOrder, tag) {\r\n        this._asset.addChild(child, localZOrder, tag);\r\n    };\r\n    /**\r\n     * @description displays the view on screen (pure virtual/abstract function) - must be overriden\r\n     *\r\n     * @param cc.Node  - optional parent node\r\n     */\r\n    View.prototype.show = function (parent) {\r\n        throw (new Error(\"View:show is an abstract function. It must be overridden\"));\r\n    };\r\n    return View;\r\n}());\r\nexports.View = View;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/mvc/View.ts\n// module id = 6\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/mvc/View.ts?");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description Virtual class - must be subclassed, the onViewReady function must be overriden\r\n * provides base functionality for a view controller , contains properties for respective view and model\r\n */\r\nvar ViewController = (function (_super) {\r\n    __extends(ViewController, _super);\r\n    function ViewController() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * @description the view associated with this controller, is assigned in viewReady(view:IView) function\r\n          */\r\n        _this._view = undefined;\r\n        _this._model = undefined;\r\n        //inject \r\n        _this._system = undefined;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @description function called by the IOC container when this class is instantiated\r\n     */\r\n    ViewController.prototype.setup = function () {\r\n    };\r\n    /**\r\n     * @description only override if you need to, this function assigns the associated view and model to respective _view/_model  class variables and calls onViewReady()\r\n     * @param view:IView\r\n     */\r\n    ViewController.prototype.viewReady = function (view, model) {\r\n        this._view = view;\r\n        this._model = model;\r\n        this.onViewReady();\r\n    };\r\n    ViewController.prototype.getView = function () {\r\n        return this._view;\r\n    };\r\n    /**\r\n     * @description Virtual function that is called after the view is assigned to the controllers _view,\r\n     *  it is here that you should initialise listeners and do futher view setup\r\n     */\r\n    ViewController.prototype.onViewReady = function () {\r\n        throw (new Error(\"ViewController:onViewReady is an abstract function. It must be overridden\"));\r\n    };\r\n    return ViewController;\r\n}(cc.Class));\r\nexports.ViewController = ViewController;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/mvc/ViewController.ts\n// module id = 7\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/mvc/ViewController.ts?");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar EntityNode_1 = __webpack_require__(21);\r\n/**\r\n * The entity list is a doubly-linked-list which allows the\r\n * entities to be added and removed efficiently.\r\n * @class\r\n */\r\nvar EntityList = (function () {\r\n    function EntityList() {\r\n        /**\r\n         * @public\r\n         * @readonly\r\n         */\r\n        this.head = null;\r\n        /**\r\n         * @public\r\n         * @readonly\r\n         */\r\n        this.tail = null;\r\n        /**\r\n         * @public\r\n         * @readonly\r\n         */\r\n        this.length = 0;\r\n        /**\r\n         * Map from entity id to entity node,\r\n         * for O(1) find and deletion.\r\n         * @private\r\n         */\r\n        this.entities = {};\r\n    }\r\n    /**\r\n     * Add an entity into this list.\r\n     * @public\r\n     * @param {Entity} entity\r\n     */\r\n    EntityList.prototype.add = function (entity) {\r\n        var node = new EntityNode_1.EntityNode(entity);\r\n        if (this.head === null) {\r\n            this.head = this.tail = node;\r\n        }\r\n        else {\r\n            node.prev = this.tail;\r\n            this.tail.next = node;\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n        this.entities[entity.id] = node;\r\n    };\r\n    /**\r\n     * Remove an entity from this list.\r\n     * @public\r\n     * @param {Entity} entity\r\n     */\r\n    EntityList.prototype.remove = function (entity) {\r\n        var node = this.entities[entity.id];\r\n        if (node === undefined) {\r\n            return;\r\n        }\r\n        if (node.prev === null) {\r\n            this.head = node.next;\r\n        }\r\n        else {\r\n            node.prev.next = node.next;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node.prev;\r\n        }\r\n        else {\r\n            node.next.prev = node.prev;\r\n        }\r\n        this.length--;\r\n        delete this.entities[entity.id];\r\n    };\r\n    /**\r\n      * Check if this list has the entity.\r\n      * @public\r\n      * @param {entityId} entity\r\n      * @return {Entity}\r\n      */\r\n    EntityList.prototype.get = function (entityId) {\r\n        if (this.entities[entityId] != undefined)\r\n            return this.entities[entityId].entity;\r\n        else\r\n            return null;\r\n    };\r\n    /**\r\n     * Check if this list has the entity.\r\n     * @public\r\n     * @param {Entity} entity\r\n     * @return {Boolean}\r\n     */\r\n    EntityList.prototype.has = function (entity) {\r\n        return this.entities[entity.id] !== undefined;\r\n    };\r\n    /**\r\n     * Remove all the entities from this list.\r\n     * @public\r\n     */\r\n    EntityList.prototype.clear = function () {\r\n        this.head = this.tail = null;\r\n        this.length = 0;\r\n        this.entities = {};\r\n    };\r\n    /**\r\n     * Return an array holding all the entities in this list.\r\n     * @public\r\n     * @return {Array}\r\n     */\r\n    EntityList.prototype.toArray = function () {\r\n        var array = [];\r\n        for (var node = this.head; node; node = node.next) {\r\n            array.push(node.entity);\r\n        }\r\n        return array;\r\n    };\r\n    return EntityList;\r\n}());\r\nexports.EntityList = EntityList;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/moon/src/EntityList.ts\n// module id = 8\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/moon/src/EntityList.ts?");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * The signal can register listeners and invoke the listeners with messages.\r\n * @class\r\n */\r\nvar Signal = (function () {\r\n    function Signal() {\r\n        this.listeners = [];\r\n    }\r\n    /**\r\n     * Add a listener to this signal.\r\n     * @public\r\n     * @param {Function} listener\r\n     */\r\n    Signal.prototype.add = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    /**\r\n     * Remove a listener from this signal.\r\n     * @public\r\n     * @param {Function} listener\r\n     */\r\n    Signal.prototype.remove = function (listener) {\r\n        for (var i = 0; i < this.listeners.length; i++) {\r\n            if (listener === this.listeners[i]) {\r\n                this.listeners.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Emit a message.\r\n     * @public\r\n     * @param {...*} messages\r\n     */\r\n    Signal.prototype.emit = function () {\r\n        var messages = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            messages[_i] = arguments[_i];\r\n        }\r\n        for (var _a = 0, _b = this.listeners; _a < _b.length; _a++) {\r\n            var listener = _b[_a];\r\n            listener.apply(null, messages);\r\n        }\r\n    };\r\n    return Signal;\r\n}());\r\nexports.Signal = Signal;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/moon/src/Signal.ts\n// module id = 9\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/moon/src/Signal.ts?");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GameComponents_1 = __webpack_require__(2);\r\nvar AssetTypes_1 = __webpack_require__(12);\r\nvar CharacterAssetFactory_1 = __webpack_require__(11);\r\nvar Entity_1 = __webpack_require__(20);\r\nvar EntityTypes_1 = __webpack_require__(13);\r\nvar GameComponents_2 = __webpack_require__(2);\r\nvar javascript_state_machine_1 = __webpack_require__(15);\r\n/**\r\n * @class CharacterEntityCreationOptions\r\n * @description provides creation options to CharacterAssetFactory\r\n */\r\nvar CharacterEntityCreationOptions = (function () {\r\n    /**\r\n     *\r\n     * @param type - the type of object to create\r\n     * @param name -the name assigned to the cc.node see cc.node.name\r\n     */\r\n    function CharacterEntityCreationOptions(type, name) {\r\n        this._type = type;\r\n        this._name = name;\r\n    }\r\n    CharacterEntityCreationOptions.prototype.getType = function () {\r\n        return this._type;\r\n    };\r\n    CharacterEntityCreationOptions.prototype.getName = function () {\r\n        return this._name;\r\n    };\r\n    return CharacterEntityCreationOptions;\r\n}());\r\nexports.CharacterEntityCreationOptions = CharacterEntityCreationOptions;\r\n/**\r\n * @class CharacterAssetFactory\r\n * @param CharacterAssetCreationOptions\r\n * Uses the returned type from character creation options to create the appropriate cc.Node derived asset\r\n *\r\n */\r\nvar CharacterEntityFactory = (function () {\r\n    function CharacterEntityFactory() {\r\n        //inject\r\n        this._characterAssetFactory = null;\r\n        //inject \r\n        this._display = undefined;\r\n    }\r\n    CharacterEntityFactory.prototype.create = function (options) {\r\n        var e = new Entity_1.Entity();\r\n        switch (options.getType()) {\r\n            case EntityTypes_1.CharacterEntityTypes.NPC:\r\n                var caco = new CharacterAssetFactory_1.CharacterAssetCreationOptions(AssetTypes_1.CharacterAssetTypes.NPC, \"NPC\");\r\n                var asset = this._characterAssetFactory.create(caco);\r\n                asset.setPosition(this._display.middleMiddle().x, this._display.middleMiddle().y + 100);\r\n                var cc = new GameComponents_2.CocosRenderNode();\r\n                cc.node = asset;\r\n                e.addComponent(cc);\r\n                var sc = new GameComponents_2.EnemyStateComponent();\r\n                var smc = {\r\n                    initial: \"idle\",\r\n                    events: [\r\n                        { name: 'start', from: 'idle', to: 'moving' },\r\n                        { name: 'die', from: 'moving', to: 'dead' },\r\n                    ]\r\n                };\r\n                sc.primaryState = javascript_state_machine_1.StateMachine.create(smc);\r\n                e.addComponent(sc);\r\n                var npc = new GameComponents_2.NPC();\r\n                e.addComponent(npc);\r\n                break;\r\n            case EntityTypes_1.CharacterEntityTypes.PLAYER:\r\n                var caco = new CharacterAssetFactory_1.CharacterAssetCreationOptions(AssetTypes_1.CharacterAssetTypes.PLAYER, \"PLAYER\");\r\n                var asset = this._characterAssetFactory.create(caco);\r\n                asset.setPosition(this._display.middleMiddle().x, this._display.middleMiddle().y);\r\n                var cc = new GameComponents_2.CocosRenderNode();\r\n                cc.node = asset;\r\n                e.addComponent(cc);\r\n                var pc = new GameComponents_2.Player();\r\n                e.addComponent(pc);\r\n                var psc = new GameComponents_2.PlayerStateComponent();\r\n                var smc = {\r\n                    initial: \"alive\",\r\n                    events: [\r\n                        { name: 'die', from: 'alive', to: 'dead' },\r\n                    ]\r\n                };\r\n                psc.primaryState = javascript_state_machine_1.StateMachine.create(smc);\r\n                e.addComponent(psc);\r\n                var pi = new GameComponents_1.PlayerInput(); //register for input events\r\n                e.addComponent(pi);\r\n                break;\r\n        }\r\n        return e;\r\n    };\r\n    return CharacterEntityFactory;\r\n}());\r\nexports.CharacterEntityFactory = CharacterEntityFactory;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./factory/entity/CharacterEntityFactory.ts\n// module id = 10\n// module chunks = 0\n\n//# sourceURL=webpack:///./factory/entity/CharacterEntityFactory.ts?");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AssetTypes_1 = __webpack_require__(12);\r\nvar MockAsset_1 = __webpack_require__(26);\r\n/**\r\n * @class CharacterAssetCreationOptions\r\n * @description provides creation options to CharacterAssetFactory\r\n */\r\nvar CharacterAssetCreationOptions = (function () {\r\n    /**\r\n     *\r\n     * @param type - the type of object to create\r\n     * @param name -the name assigned to the cc.node see cc.node.name\r\n     */\r\n    function CharacterAssetCreationOptions(type, name) {\r\n        this._type = type;\r\n        this._name = name;\r\n    }\r\n    CharacterAssetCreationOptions.prototype.getType = function () {\r\n        return this._type;\r\n    };\r\n    CharacterAssetCreationOptions.prototype.getName = function () {\r\n        return this._name;\r\n    };\r\n    return CharacterAssetCreationOptions;\r\n}());\r\nexports.CharacterAssetCreationOptions = CharacterAssetCreationOptions;\r\n/**\r\n * @class CharacterAssetFactory\r\n * @param CharacterAssetCreationOptions\r\n * Uses the returned type from character creation options to create the appropriate cc.Node derived asset\r\n *\r\n */\r\nvar CharacterAssetFactory = (function () {\r\n    function CharacterAssetFactory() {\r\n    }\r\n    CharacterAssetFactory.prototype.create = function (options) {\r\n        switch (options.getType()) {\r\n            case AssetTypes_1.CharacterAssetTypes.NPC:\r\n                return new MockAsset_1.MockAsset(options, 50, MockAsset_1.MockAssetColours.PINK, \"NPC\");\r\n            case AssetTypes_1.CharacterAssetTypes.NPC_MOCK:\r\n                return new MockAsset_1.MockAsset(options, 50, MockAsset_1.MockAssetColours.PINK, \"NPC MOCK\");\r\n            case AssetTypes_1.CharacterAssetTypes.PLAYER:\r\n                return new MockAsset_1.MockAsset(options, 50, MockAsset_1.MockAssetColours.GREEN, \"PLAYER\");\r\n            case AssetTypes_1.CharacterAssetTypes.PLAYER_MOCK:\r\n                return new MockAsset_1.MockAsset(options, 50, MockAsset_1.MockAssetColours.GREEN, \"PLAYER MOCK\");\r\n        }\r\n    };\r\n    return CharacterAssetFactory;\r\n}());\r\nexports.CharacterAssetFactory = CharacterAssetFactory;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./factory/view/CharacterAssetFactory.ts\n// module id = 11\n// module chunks = 0\n\n//# sourceURL=webpack:///./factory/view/CharacterAssetFactory.ts?");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CharacterAssetTypes;\r\n(function (CharacterAssetTypes) {\r\n    CharacterAssetTypes[CharacterAssetTypes[\"PLAYER\"] = 0] = \"PLAYER\";\r\n    CharacterAssetTypes[CharacterAssetTypes[\"NPC\"] = 1] = \"NPC\";\r\n    CharacterAssetTypes[CharacterAssetTypes[\"PLAYER_MOCK\"] = 2] = \"PLAYER_MOCK\";\r\n    CharacterAssetTypes[CharacterAssetTypes[\"NPC_MOCK\"] = 3] = \"NPC_MOCK\";\r\n})(CharacterAssetTypes = exports.CharacterAssetTypes || (exports.CharacterAssetTypes = {}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./types/AssetTypes.ts\n// module id = 12\n// module chunks = 0\n\n//# sourceURL=webpack:///./types/AssetTypes.ts?");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CharacterEntityTypes;\r\n(function (CharacterEntityTypes) {\r\n    CharacterEntityTypes[CharacterEntityTypes[\"PLAYER\"] = 0] = \"PLAYER\";\r\n    CharacterEntityTypes[CharacterEntityTypes[\"NPC\"] = 1] = \"NPC\";\r\n})(CharacterEntityTypes = exports.CharacterEntityTypes || (exports.CharacterEntityTypes = {}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./types/EntityTypes.ts\n// module id = 13\n// module chunks = 0\n\n//# sourceURL=webpack:///./types/EntityTypes.ts?");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GameplaySystem_1 = __webpack_require__(29);\r\nvar CharacterEntityFactory_1 = __webpack_require__(10);\r\nvar GameModel_1 = __webpack_require__(27);\r\nvar ApplicationEvents_1 = __webpack_require__(3);\r\nvar SplashScreenViewController_1 = __webpack_require__(37);\r\nvar SplashScreenView_1 = __webpack_require__(36);\r\nvar Display_1 = __webpack_require__(18);\r\nvar GameView_1 = __webpack_require__(34);\r\nvar GameController_1 = __webpack_require__(25);\r\nvar GameViewController_1 = __webpack_require__(35);\r\nvar CharacterAssetFactory_1 = __webpack_require__(11);\r\nvar Application2 = (function () {\r\n    function Application2() {\r\n    }\r\n    Application2.prototype.startUp = function () {\r\n        this._system = new dijon.System();\r\n        this._system.autoMapOutlets = true;\r\n        /**\r\n         * map the dijon containner to a global outlet named _system so that it may be injected into any class\r\n         * that has the \"_system\" mapping\r\n         */\r\n        this._system.mapValue(\"_system\", this._system);\r\n        //this._system.mapOutlet('_system'); - not needed as we have set autoMapOutlets to true above\r\n        /**\r\n         * map the game controller as a singleton\r\n         * the game controller will provide application wide functionality\r\n         */\r\n        this._system.mapSingleton(\"GameController\", GameController_1.GameController);\r\n        var gc = this._system.getObject(\"GameController\");\r\n        /**\r\n         * map the game model as a singleton\r\n         * the main data model for the game\r\n         */\r\n        this._system.mapSingleton(\"GameModel\", GameModel_1.GameModel);\r\n        /**\r\n         * map the character asset factory as a singleton\r\n         *\r\n         */\r\n        this._system.mapSingleton(\"_characterAssetFactory\", CharacterAssetFactory_1.CharacterAssetFactory);\r\n        /**\r\n        * map the character entity factory as a singleton\r\n        *\r\n        */\r\n        this._system.mapSingleton(\"_characterEntityFactory\", CharacterEntityFactory_1.CharacterEntityFactory);\r\n        /**\r\n        * map the display utility class as a singleton\r\n        *\r\n        */\r\n        this._system.mapSingleton(\"_display\", Display_1.Display);\r\n        /**\r\n         * map the gameplay system class so that we may inject the entity factory upon creation\r\n         */\r\n        this._system.mapClass(\"GameplaySystem\", GameplaySystem_1.GameplaySystem);\r\n        /**\r\n        * initialise the splash screen view and its controller\r\n        * first we map our SplashScreenView and SplashScreenViewController classes to class identifiers holding the same name\r\n        * then we map the SplashScreenViews _viewcontroller to SplashScreenViewController\r\n        * When an instance of game view is created a corresponding instance of SplashScreenViewController is injected into its _viewController property\r\n        */\r\n        this._system.mapClass(\"SplashScreenView\", SplashScreenView_1.SplashScreenView);\r\n        this._system.mapClass(\"SplashScreenViewController\", SplashScreenViewController_1.SplashScreenViewController);\r\n        this._system.mapOutlet(\"SplashScreenViewController\", \"SplashScreenView\", \"_viewController\");\r\n        /**\r\n         * initialise the game view and its controller\r\n         * first we map our GameView and GameViewController classes to class identifiers holding the same name\r\n         * then we map the GameViews _viewcontroller to GameViewController\r\n         * When an instance of game view is created a corresponding instance of GameViewController is injected into its _viewController property\r\n         */\r\n        this._system.mapClass(\"GameView\", GameView_1.GameView);\r\n        this._system.mapClass(\"GameViewController\", GameViewController_1.GameViewController);\r\n        this._system.mapOutlet(\"GameViewController\", \"GameView\", \"_viewController\");\r\n        /**\r\n         * map the GameController::onAppStartupComplete function as a handler for the ApplicationEvents.APP_STARTUP_COMPLETE event\r\n         */\r\n        this._system.mapHandler(ApplicationEvents_1.ApplicationEvents.APP_STARTUP_COMPLETE, 'GameController', 'onAppStartupComplete');\r\n        /**\r\n         * map the GameController::onAppGoToPlayScene function as a handler for the ApplicationEvents.APP_GOTO_PLAY_SCENE event\r\n         */\r\n        this._system.mapHandler(ApplicationEvents_1.ApplicationEvents.APP_GOTO_PLAY_SCENE, 'GameController', 'onAppGoToPlayScene');\r\n        /**\r\n         * map the GameController::onAppGoToPlayScene function as a handler for the ApplicationEvents.APP_GOTO_PLAY_SCENE event\r\n         */\r\n        this._system.mapHandler(ApplicationEvents_1.ApplicationEvents.APP_GOTO_SPLASH_SCENE, 'GameController', 'onAppGoToSplashScene');\r\n        /**\r\n         * fire app:startup event\r\n         */\r\n        this._system.notify(ApplicationEvents_1.ApplicationEvents.APP_STARTUP);\r\n        /**\r\n      * fire app:startupComplete event\r\n      */\r\n        this._system.notify(ApplicationEvents_1.ApplicationEvents.APP_STARTUP_COMPLETE);\r\n    };\r\n    return Application2;\r\n}());\r\nexports.Application2 = Application2;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Application2.ts\n// module id = 14\n// module chunks = 0\n\n//# sourceURL=webpack:///./Application2.ts?");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\n  Javascript State Machine Library - https://github.com/jakesgordon/javascript-state-machine\n\n  Copyright (c) 2012, 2013, 2014, 2015, Jake Gordon and contributors\n  Released under the MIT license - https://github.com/jakesgordon/javascript-state-machine/blob/master/LICENSE\n\n*/\n\n(function () {\n\n  var StateMachine = {\n\n    //---------------------------------------------------------------------------\n\n    VERSION: \"2.4.0\",\n\n    //---------------------------------------------------------------------------\n\n    Result: {\n      SUCCEEDED:    1, // the event transitioned successfully from one state to another\n      NOTRANSITION: 2, // the event was successfull but no state transition was necessary\n      CANCELLED:    3, // the event was cancelled by the caller in a beforeEvent callback\n      PENDING:      4  // the event is asynchronous and the caller is in control of when the transition occurs\n    },\n\n    Error: {\n      INVALID_TRANSITION: 100, // caller tried to fire an event that was innapropriate in the current state\n      PENDING_TRANSITION: 200, // caller tried to fire an event while an async transition was still pending\n      INVALID_CALLBACK:   300 // caller provided callback function threw an exception\n    },\n\n    WILDCARD: '*',\n    ASYNC: 'async',\n\n    //---------------------------------------------------------------------------\n\n    create: function(cfg, target) {\n\n      var initial      = (typeof cfg.initial == 'string') ? { state: cfg.initial } : cfg.initial; // allow for a simple string, or an object with { state: 'foo', event: 'setup', defer: true|false }\n      var terminal     = cfg.terminal || cfg['final'];\n      var fsm          = target || cfg.target  || {};\n      var events       = cfg.events || [];\n      var callbacks    = cfg.callbacks || {};\n      var map          = {}; // track state transitions allowed for an event { event: { from: [ to ] } }\n      var transitions  = {}; // track events allowed from a state            { state: [ event ] }\n\n      var add = function(e) {\n        var from = Array.isArray(e.from) ? e.from : (e.from ? [e.from] : [StateMachine.WILDCARD]); // allow 'wildcard' transition if 'from' is not specified\n        map[e.name] = map[e.name] || {};\n        for (var n = 0 ; n < from.length ; n++) {\n          transitions[from[n]] = transitions[from[n]] || [];\n          transitions[from[n]].push(e.name);\n\n          map[e.name][from[n]] = e.to || from[n]; // allow no-op transition if 'to' is not specified\n        }\n        if (e.to)\n          transitions[e.to] = transitions[e.to] || [];\n      };\n\n      if (initial) {\n        initial.event = initial.event || 'startup';\n        add({ name: initial.event, from: 'none', to: initial.state });\n      }\n\n      for(var n = 0 ; n < events.length ; n++)\n        add(events[n]);\n\n      for(var name in map) {\n        if (map.hasOwnProperty(name))\n          fsm[name] = StateMachine.buildEvent(name, map[name]);\n      }\n\n      for(var name in callbacks) {\n        if (callbacks.hasOwnProperty(name))\n          fsm[name] = callbacks[name]\n      }\n\n      fsm.current     = 'none';\n      fsm.is          = function(state) { return Array.isArray(state) ? (state.indexOf(this.current) >= 0) : (this.current === state); };\n      fsm.can         = function(event) { return !this.transition && (map[event] !== undefined) && (map[event].hasOwnProperty(this.current) || map[event].hasOwnProperty(StateMachine.WILDCARD)); }\n      fsm.cannot      = function(event) { return !this.can(event); };\n      fsm.transitions = function()      { return (transitions[this.current] || []).concat(transitions[StateMachine.WILDCARD] || []); };\n      fsm.isFinished  = function()      { return this.is(terminal); };\n      fsm.error       = cfg.error || function(name, from, to, args, error, msg, e) { throw e || msg; }; // default behavior when something unexpected happens is to throw an exception, but caller can override this behavior if desired (see github issue #3 and #17)\n      fsm.states      = function() { return Object.keys(transitions).sort() };\n\n      if (initial && !initial.defer)\n        fsm[initial.event]();\n\n      return fsm;\n\n    },\n\n    //===========================================================================\n\n    doCallback: function(fsm, func, name, from, to, args) {\n      if (func) {\n        try {\n          return func.apply(fsm, [name, from, to].concat(args));\n        }\n        catch(e) {\n          return fsm.error(name, from, to, args, StateMachine.Error.INVALID_CALLBACK, \"an exception occurred in a caller-provided callback function\", e);\n        }\n      }\n    },\n\n    beforeAnyEvent:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onbeforeevent'],                       name, from, to, args); },\n    afterAnyEvent:   function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onafterevent'] || fsm['onevent'],      name, from, to, args); },\n    leaveAnyState:   function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onleavestate'],                        name, from, to, args); },\n    enterAnyState:   function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onenterstate'] || fsm['onstate'],      name, from, to, args); },\n    changeState:     function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onchangestate'],                       name, from, to, args); },\n\n    beforeThisEvent: function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onbefore' + name],                     name, from, to, args); },\n    afterThisEvent:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onafter'  + name] || fsm['on' + name], name, from, to, args); },\n    leaveThisState:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onleave'  + from],                     name, from, to, args); },\n    enterThisState:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onenter'  + to]   || fsm['on' + to],   name, from, to, args); },\n\n    beforeEvent: function(fsm, name, from, to, args) {\n      if ((false === StateMachine.beforeThisEvent(fsm, name, from, to, args)) ||\n          (false === StateMachine.beforeAnyEvent( fsm, name, from, to, args)))\n        return false;\n    },\n\n    afterEvent: function(fsm, name, from, to, args) {\n      StateMachine.afterThisEvent(fsm, name, from, to, args);\n      StateMachine.afterAnyEvent( fsm, name, from, to, args);\n    },\n\n    leaveState: function(fsm, name, from, to, args) {\n      var specific = StateMachine.leaveThisState(fsm, name, from, to, args),\n          general  = StateMachine.leaveAnyState( fsm, name, from, to, args);\n      if ((false === specific) || (false === general))\n        return false;\n      else if ((StateMachine.ASYNC === specific) || (StateMachine.ASYNC === general))\n        return StateMachine.ASYNC;\n    },\n\n    enterState: function(fsm, name, from, to, args) {\n      StateMachine.enterThisState(fsm, name, from, to, args);\n      StateMachine.enterAnyState( fsm, name, from, to, args);\n    },\n\n    //===========================================================================\n\n    buildEvent: function(name, map) {\n      return function() {\n\n        var from  = this.current;\n        var to    = map[from] || (map[StateMachine.WILDCARD] != StateMachine.WILDCARD ? map[StateMachine.WILDCARD] : from) || from;\n        var args  = Array.prototype.slice.call(arguments); // turn arguments into pure array\n\n        if (this.transition)\n          return this.error(name, from, to, args, StateMachine.Error.PENDING_TRANSITION, \"event \" + name + \" inappropriate because previous transition did not complete\");\n\n        if (this.cannot(name))\n          return this.error(name, from, to, args, StateMachine.Error.INVALID_TRANSITION, \"event \" + name + \" inappropriate in current state \" + this.current);\n\n        if (false === StateMachine.beforeEvent(this, name, from, to, args))\n          return StateMachine.Result.CANCELLED;\n\n        if (from === to) {\n          StateMachine.afterEvent(this, name, from, to, args);\n          return StateMachine.Result.NOTRANSITION;\n        }\n\n        // prepare a transition method for use EITHER lower down, or by caller if they want an async transition (indicated by an ASYNC return value from leaveState)\n        var fsm = this;\n        this.transition = function() {\n          fsm.transition = null; // this method should only ever be called once\n          fsm.current = to;\n          StateMachine.enterState( fsm, name, from, to, args);\n          StateMachine.changeState(fsm, name, from, to, args);\n          StateMachine.afterEvent( fsm, name, from, to, args);\n          return StateMachine.Result.SUCCEEDED;\n        };\n        this.transition.cancel = function() { // provide a way for caller to cancel async transition if desired (issue #22)\n          fsm.transition = null;\n          StateMachine.afterEvent(fsm, name, from, to, args);\n        }\n\n        var leave = StateMachine.leaveState(this, name, from, to, args);\n        if (false === leave) {\n          this.transition = null;\n          return StateMachine.Result.CANCELLED;\n        }\n        else if (StateMachine.ASYNC === leave) {\n          return StateMachine.Result.PENDING;\n        }\n        else {\n          if (this.transition) // need to check in case user manually called transition() but forgot to return StateMachine.ASYNC\n            return this.transition();\n        }\n\n      };\n    }\n\n  }; // StateMachine\n\n  //===========================================================================\n\n  //======\n  // NODE\n  //======\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = StateMachine;\n    }\n    exports.StateMachine = StateMachine;\n  }\n  //============\n  // AMD/REQUIRE\n  //============\n  else if (typeof define === 'function' && define.amd) {\n    define(function(require) { return StateMachine; });\n  }\n  //========\n  // BROWSER\n  //========\n  else if (typeof window !== 'undefined') {\n    window.StateMachine = StateMachine;\n  }\n  //===========\n  // WEB WORKER\n  //===========\n  else if (typeof self !== 'undefined') {\n    self.StateMachine = StateMachine;\n  }\n\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/javascript-state-machine/state-machine.js\n// module id = 15\n// module chunks = 0\n\n//# sourceURL=webpack:///../~/javascript-state-machine/state-machine.js?");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SwipeDirections_1 = __webpack_require__(4);\r\nvar DirectionalSwipeGestureRecogniser = (function () {\r\n    function DirectionalSwipeGestureRecogniser() {\r\n        this.result = SwipeDirections_1.SwipeDirections.NOT_SUPPORTED;\r\n        this.startTime = null;\r\n    }\r\n    // be called in onTouchBegan\r\n    DirectionalSwipeGestureRecogniser.prototype.getDirection = function () {\r\n        return this._direction;\r\n    };\r\n    DirectionalSwipeGestureRecogniser.prototype.beginPoint = function (x, y) {\r\n        this.beginPt = cc.p(x, y);\r\n        this.result = SwipeDirections_1.SwipeDirections.INIT_RETURN;\r\n        this.startTime = new Date().getTime();\r\n    };\r\n    // be called in onTouchEnded\r\n    DirectionalSwipeGestureRecogniser.prototype.endPoint = function (x, y) {\r\n        this.endPt = cc.p(x, y);\r\n        var threshold = 100;\r\n        var restraint = 100;\r\n        var newRtn = SwipeDirections_1.SwipeDirections.NOT_SUPPORTED;\r\n        this._direction = cc.p(this.endPt.x - this.beginPt.x, this.endPt.y - this.beginPt.y);\r\n        var dist = cc.pLength(this._direction);\r\n        var elapsedTime = new Date().getTime() - this.startTime; // get time elapsed\r\n        if (elapsedTime <= 1000) {\r\n            if (Math.abs(dist) >= threshold) {\r\n                newRtn = SwipeDirections_1.SwipeDirections.SWIPE_ANY_DIR;\r\n            }\r\n            else {\r\n                newRtn = SwipeDirections_1.SwipeDirections.TAP;\r\n            }\r\n        }\r\n        return newRtn;\r\n    };\r\n    return DirectionalSwipeGestureRecogniser;\r\n}());\r\nexports.DirectionalSwipeGestureRecogniser = DirectionalSwipeGestureRecogniser;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/gestures/DirectionalSwipeGestureRecogniser.ts\n// module id = 16\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/gestures/DirectionalSwipeGestureRecogniser.ts?");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description base class for game and view models\r\n * it is recommended that this model be overridden and typesafe accessors created for each aspect of the\r\n * model data that we are interested in, clients of the model need not know about the exact\r\n * schema of the underlying data\r\n *\r\n * This class esentially wraps a single data object providing convenience functions to\r\n * deep set and get values , and  bind to changes in said values\r\n *\r\n * @todo add support for deep binding - currently does not support deep binding\r\n * i.e if a bind is applied to an obect and a property of that object is modified, then that binding is not executed\r\n *  To execute said binding one must update the entire object\r\n *\r\n * @example\r\n * var m = new Model();\r\n * m.set(\"levelData.levelId\",0);\r\n * var levelId = m.get(\"levelData.levelId\");\r\n * cc.log(levelId); //prints 0\r\n * cc.log(m.getAllDataAsJsonString()); prints: {\"levelData\":{\"levelId\":0}}\r\n *\r\n * this.onLevelIdUpdated = function(oldval:T, newval:T){\r\n * cc.log(\"levelData.levelId has been set to \"  + newval);\r\n * }\r\n * m.bind(\"levelData.levelId\", this.onLevelIdUpdated,this);\r\n * //onLevelIdUpdated function called whenever  m.set(\"levelData.levelId\",n); is called\r\n *\r\n */\r\nvar Model = (function () {\r\n    /**\r\n     * @description constructor will initialise the model data with data provided by config.data if provided\r\n     * @param config\r\n     */\r\n    function Model(config) {\r\n        if (config === void 0) { config = null; }\r\n        this._modelBindings = {};\r\n        this._data = {};\r\n        if (config != null && config.data != null) {\r\n            this.assign(this._data, config.data);\r\n        }\r\n    }\r\n    /**\r\n     * @description returns the entire model data as a JSON string\r\n     * @return string the data as a json string\r\n     */\r\n    Model.prototype.getAllDataAsJsonString = function () {\r\n        return JSON.stringify(this._data);\r\n    };\r\n    /**\r\n    * @description returns the sub data at the path described. Example: \"path.to.my.value\" as a JSON string\r\n    * @return string the data as a json string\r\n    */\r\n    Model.prototype.getSubDataAsJsonString = function (path) {\r\n        var data = this.get(path);\r\n        return JSON.stringify(data);\r\n    };\r\n    /**\r\n     * @description copies all properties from var args into target\r\n     * @param target\r\n     * @param varArgs\r\n     */\r\n    Model.prototype.assign = function (target) {\r\n        'use strict';\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (target == null) {\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        }\r\n        var to = Object(target);\r\n        for (var index = 1; index < varArgs.length; index++) {\r\n            var nextSource = varArgs[index];\r\n            if (nextSource != null) {\r\n                for (var nextKey in nextSource) {\r\n                    // Avoid bugs when hasOwnProperty is shadowed\r\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return to;\r\n    };\r\n    /**\r\n     *@description given an origin object and a path (\"my.path.to.data\") returns an object  containing\r\n     * the parent object \"objectToSet\" and string \"member\" containing the name of the property holding the value  to set referenced by \"path\"\r\n     * if the path does not exist it is created with object/any objects\r\n     * @param origin the origin object in which the path should traverse\r\n     * @param path the path\r\n     * @returns {}  an object with vals  {objectToSet:object, member:string}, returns these can be used to set a value(member)\r\n     *              on the object(objectToSet) via objectToSet[member] = value\r\n     *\r\n     */\r\n    Model.prototype.getValueToSet = function (origin, path) {\r\n        var pathSplit = path.split(\".\");\r\n        var res = {};\r\n        var objectToSet = origin;\r\n        for (var i = 0; i < pathSplit.length - 1; i++) {\r\n            if (objectToSet[pathSplit[i]] == null) {\r\n                objectToSet[pathSplit[i]] = {};\r\n            }\r\n            objectToSet = objectToSet[pathSplit[i]];\r\n        }\r\n        res.objectToSet = objectToSet;\r\n        res.member = pathSplit[pathSplit.length - 1];\r\n        return res;\r\n    };\r\n    /**\r\n     *@description given an origin object and a path (\"my.path.to.data\") returns an object  containing\r\n     * the parent object \"objectToGet\" and string \"member\" containing the name of the property holding the value to get, referenced by \"path\"\r\n     * @param origin the origin object in which the path should traverse\r\n     * @param path the path\r\n     * @returns {}  an object with vals  {objectToGet:object, member:string}, returns these can be used to set a value(member)\r\n     *              on the object(objectToSet) via objectToSet[member] = value\r\n     *\r\n     */\r\n    Model.prototype.getValueToGet = function (origin, path) {\r\n        var res = {};\r\n        var pathSplit = path.split(\".\");\r\n        var objectToGet = origin;\r\n        for (var i = 0; i < pathSplit.length - 1; i++) {\r\n            objectToGet = objectToGet[pathSplit[i]];\r\n            if (objectToGet == null)\r\n                return null;\r\n        }\r\n        res.objectToGet = objectToGet;\r\n        res.member = pathSplit[pathSplit.length - 1];\r\n        return res;\r\n    };\r\n    /**\r\n     * @description sets the provided value at the path (\"my.path.to.data\")\r\n     * @param path\r\n     * @param value\r\n     */\r\n    Model.prototype.set = function (path, value) {\r\n        var objectToSetData = this.getValueToSet(this._data, path);\r\n        var oldVal = objectToSetData.objectToSet[objectToSetData.member];\r\n        objectToSetData.objectToSet[objectToSetData.member] = value;\r\n        var signalToGetData = this.getValueToGet(this._modelBindings, path);\r\n        if (signalToGetData != null) {\r\n            var signal = signalToGetData.objectToGet[signalToGetData.member];\r\n            if (signal != null)\r\n                signal.dispatch(oldVal, value);\r\n        }\r\n    };\r\n    /**\r\n     * @description returns the value residing  at the path (\"my.path.to.data\")\r\n     * @param path\r\n     * @param value\r\n     */\r\n    Model.prototype.get = function (path) {\r\n        var objectToGetData = this.getValueToGet(this._data, path);\r\n        return objectToGetData.objectToGet[objectToGetData.member];\r\n    };\r\n    /**\r\n    * @description adds a binding to execute a callback whenever  the value residing  at the path (\"my.path.to.data\")  is set via set function\r\n    * @param path\r\n    * @param func\r\n    * @param scope\r\n    */\r\n    Model.prototype.bind = function (path, func, scope) {\r\n        var objectToSetData = this.getValueToSet(this._modelBindings, path);\r\n        if (objectToSetData.objectToSet[objectToSetData.member] == null) {\r\n            objectToSetData.objectToSet[objectToSetData.member] = new signals.Signal();\r\n        }\r\n        objectToSetData.objectToSet[objectToSetData.member].add(func, scope);\r\n    };\r\n    /**\r\n * @description removes a binding to the data at given path (\"my.path.to.data\")\r\n * @param path\r\n * @param func\r\n * @param scope\r\n */\r\n    Model.prototype.unbind = function (path, func, scope) {\r\n        var signalToGetData = this.getValueToGet(this._modelBindings, path);\r\n        var signal = signalToGetData.objectToGet[signalToGetData.member];\r\n        if (signal)\r\n            signal.remove(func, scope);\r\n        if (signal.getNumListeners() <= 0) {\r\n            signal.dispose();\r\n            signalToGetData.objectToGet[signalToGetData.member] = null;\r\n        }\r\n    };\r\n    /**\r\n     * @description determines if given binding already exists\r\n     * @param path\r\n     * @param func\r\n     * @param scope\r\n     * @returns boolean true if binding exists or false\r\n     */\r\n    Model.prototype.hasBinding = function (path, func, scope) {\r\n        var signalToGetData = this.getValueToGet(this._modelBindings, path);\r\n        var signal = signalToGetData.objectToGet[signalToGetData.member];\r\n        if (signal == null)\r\n            return false;\r\n        else\r\n            return signal.has(func, scope);\r\n    };\r\n    return Model;\r\n}());\r\nexports.Model = Model;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/mvc/Model.ts\n// module id = 17\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/mvc/Model.ts?");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description utility class for obtaining information about the the cocos2d-x display\r\n *\r\n */\r\nvar Display = (function () {\r\n    function Display() {\r\n    }\r\n    /**\r\n     * @returns {cc.Point} - the top left of the visible portion of the screen\r\n     */\r\n    Display.prototype.topLeft = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x, porigin.y + sz.height);\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the top right of the visible portion of the screen\r\n     */\r\n    Display.prototype.topRight = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + sz.width, porigin.y + sz.height);\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the top middle of the visible portion of the screen\r\n     */\r\n    Display.prototype.topMiddle = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width / 2), porigin.y + sz.height);\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the middle left of the visible portion of the screen\r\n     */\r\n    Display.prototype.middleLeft = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x, porigin.y + (sz.height / 2));\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the middle middle of the visible portion of the screen\r\n     */\r\n    Display.prototype.middleMiddle = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width / 2), porigin.y + (sz.height / 2));\r\n    };\r\n    /**\r\n   * @returns {cc.Point} - the middle right of the visible portion of the screen\r\n   */\r\n    Display.prototype.middleRight = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width), porigin.y + (sz.height / 2));\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the bottom left of the visible portion of the screen\r\n     */\r\n    Display.prototype.bottomLeft = function () {\r\n        return cc.director.getVisibleOrigin();\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the bottom middle of the visible portion of the screen\r\n     */\r\n    Display.prototype.bottomMiddle = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width / 2), porigin.y);\r\n    };\r\n    /**\r\n     * @returns {cc.Point} - the bottom right of the visible portion of the screen\r\n     */\r\n    Display.prototype.bottomRight = function () {\r\n        var porigin = cc.director.getVisibleOrigin();\r\n        var sz = cc.director.getVisibleSize();\r\n        return cc.p(porigin.x + (sz.width), porigin.y);\r\n    };\r\n    /**\r\n     * @returns {Number} - the height of the visible portion of the screen\r\n     */\r\n    Display.prototype.screenHeight = function () {\r\n        var sz = cc.director.getVisibleSize();\r\n        return sz.height;\r\n    };\r\n    /**\r\n    * @returns {Number} - the width of the visible portion of the screen\r\n    */\r\n    Display.prototype.screenWidth = function () {\r\n        var sz = cc.director.getVisibleSize();\r\n        return sz.width;\r\n    };\r\n    /**\r\n     * @returns {Number} - the design resolution height\r\n     */\r\n    Display.prototype.designResolutionHeight = function () {\r\n        var sz = cc.view.getDesignResolutionSize();\r\n        return sz.height;\r\n    };\r\n    /**\r\n     * @returns {Number} - the design resolution width\r\n     */\r\n    Display.prototype.designResolutionWidth = function () {\r\n        var sz = cc.view.getDesignResolutionSize();\r\n        return sz.width;\r\n    };\r\n    /**\r\n     * @param {Number} id - the constant representing the desired position on screen for example Display.BOTTOM_RIGHT | Display.MIDDLE_LEFT etc.\r\n     * @returns {Number} - the design resolution width\r\n     */\r\n    Display.prototype.getPosition = function (id) {\r\n        switch (id) {\r\n            case Display.BOTTOM_RIGHT:\r\n                return this.bottomRight();\r\n            case Display.BOTTOM_MIDDLE:\r\n                return this.bottomMiddle();\r\n            case Display.BOTTOM_LEFT:\r\n                return this.bottomLeft();\r\n            case Display.MIDDLE_RIGHT:\r\n                return this.middleRight();\r\n            case Display.MIDDLE_MIDDLE:\r\n                return this.middleMiddle();\r\n            case Display.MIDDLE_LEFT:\r\n                return this.middleLeft();\r\n            case Display.TOP_MIDDLE:\r\n                return this.topMiddle();\r\n            case Display.TOP_RIGHT:\r\n                return this.topRight();\r\n            case Display.TOP_LEFT:\r\n                return this.topLeft();\r\n        }\r\n    };\r\n    return Display;\r\n}());\r\nDisplay.BOTTOM_RIGHT = 0;\r\nDisplay.BOTTOM_MIDDLE = 1;\r\nDisplay.BOTTOM_LEFT = 2;\r\nDisplay.MIDDLE_RIGHT = 3;\r\nDisplay.MIDDLE_MIDDLE = 4;\r\nDisplay.MIDDLE_LEFT = 5;\r\nDisplay.TOP_MIDDLE = 6;\r\nDisplay.TOP_RIGHT = 7;\r\nDisplay.TOP_LEFT = 8;\r\nexports.Display = Display;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/dalste/util/Display.ts\n// module id = 18\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/dalste/util/Display.ts?");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * The components is the container of some properties that\r\n * the entity possesses. It may also contain some methods.\r\n * @class\r\n */\r\nvar Component = (function () {\r\n    function Component() {\r\n    }\r\n    return Component;\r\n}());\r\nexports.Component = Component;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/moon/src/Component.ts\n// module id = 19\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/moon/src/Component.ts?");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Signal_1 = __webpack_require__(9);\r\n/**\r\n * The entity is the container of components.\r\n * @class\r\n */\r\nvar Entity = (function () {\r\n    function Entity() {\r\n        /**\r\n         * @public\r\n         * @readonly\r\n         */\r\n        this.id = Entity._id++;\r\n        /**\r\n         * Map from component names to components.\r\n         * @private\r\n         * @property\r\n         */\r\n        this.components = {};\r\n        /**\r\n         * @public\r\n         * @readonly\r\n         */\r\n        this.onComponentAdded = new Signal_1.Signal();\r\n        /**\r\n         * @public\r\n         * @readonly\r\n         */\r\n        this.onComponentRemoved = new Signal_1.Signal();\r\n    }\r\n    /**\r\n     * Check if this entity has a component by name.\r\n     * @public\r\n     * @param {String} componentName\r\n     * @return {Boolean}\r\n     */\r\n    Entity.prototype.hasComponent = function (componentName) {\r\n        return this.components['$' + componentName] !== undefined;\r\n    };\r\n    /**\r\n     * Get a component of this entity by name.\r\n     * @public\r\n     * @param {String} componentName\r\n     * @return {Component}\r\n     */\r\n    Entity.prototype.getComponent = function (componentName) {\r\n        return this.components['$' + componentName];\r\n    };\r\n    /**\r\n     * Add a component to this entity.\r\n     * @public\r\n     * @param {Component} component\r\n     */\r\n    Entity.prototype.addComponent = function (component) {\r\n        this.components['$' + component.name] = component;\r\n        this.onComponentAdded.emit(this, component.name);\r\n    };\r\n    /**\r\n     * Remove a component from this entity by name.\r\n     * @public\r\n     * @param {String} componentName\r\n     */\r\n    Entity.prototype.removeComponent = function (componentName) {\r\n        var removedComponent = this.components['$' + componentName];\r\n        this.components['$' + componentName] = undefined;\r\n        this.onComponentRemoved.emit(this, componentName, removedComponent);\r\n    };\r\n    return Entity;\r\n}());\r\nEntity._id = 0;\r\nexports.Entity = Entity;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/moon/src/Entity.ts\n// module id = 20\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/moon/src/Entity.ts?");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * The entity node is a wrapper around an entity, to be added into\r\n * the entity list.\r\n * @class\r\n */\r\nvar EntityNode = (function () {\r\n    function EntityNode(entity) {\r\n        this.entity = entity;\r\n        this.next = null;\r\n        this.prev = null;\r\n    }\r\n    return EntityNode;\r\n}());\r\nexports.EntityNode = EntityNode;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/moon/src/EntityNode.ts\n// module id = 21\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/moon/src/EntityNode.ts?");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar EntityList_1 = __webpack_require__(8);\r\nvar Signal_1 = __webpack_require__(9);\r\n/**\r\n * The family is a collection of entities having all the specified components.\r\n * @class\r\n */\r\nvar Family = (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {Array} componentNames\r\n     */\r\n    function Family(componentNames) {\r\n        /**\r\n         * @private\r\n         */\r\n        this.componentNames = componentNames;\r\n        /**\r\n         * A linked list holding the entities;\r\n         * @private\r\n         */\r\n        this.entities = new EntityList_1.EntityList();\r\n        /**\r\n         * @public\r\n         * @readonly\r\n         */\r\n        this.entityAdded = new Signal_1.Signal();\r\n        /**\r\n         * @public\r\n         * @readonly\r\n         */\r\n        this.entityRemoved = new Signal_1.Signal();\r\n    }\r\n    /**\r\n     * Get the entities of this family.\r\n     * @public\r\n     * @return {Array}\r\n     */\r\n    Family.prototype.getEntities = function () {\r\n        return this.entities.toArray();\r\n    };\r\n    /**\r\n     * Add the entity into the family if match.\r\n     * @public\r\n     * @param {Entity} entity\r\n     */\r\n    Family.prototype.addEntityIfMatch = function (entity) {\r\n        if (!this.entities.has(entity) && this.matchEntity(entity)) {\r\n            this.entities.add(entity);\r\n            this.entityAdded.emit(entity);\r\n        }\r\n    };\r\n    /**\r\n     * Remove the entity into the family if match.\r\n     * @public\r\n     * @function\r\n     * @param {Entity} entity\r\n     */\r\n    Family.prototype.removeEntity = function (entity) {\r\n        if (this.entities.has(entity)) {\r\n            this.entities.remove(entity);\r\n            this.entityRemoved.emit(entity);\r\n        }\r\n    };\r\n    /**\r\n     * Handler to be called when a component is added to an entity.\r\n     * @public\r\n     * @param {Entity} entity\r\n     * @param {String} componentName\r\n     */\r\n    Family.prototype.onComponentAdded = function (entity, componentName) {\r\n        this.addEntityIfMatch(entity);\r\n    };\r\n    /**\r\n     * Handler to be called when a component is removed from an entity.\r\n     * @public\r\n     * @param {Entity} entity\r\n     * @param {String} componentName\r\n     * @param {Component} removedComponent\r\n     */\r\n    Family.prototype.onComponentRemoved = function (entity, componentName, removedComponent) {\r\n        // return if the entity is not in this family\r\n        if (!this.entities.has(entity)) {\r\n            return;\r\n        }\r\n        // remove the node if the removed component is required by this family\r\n        for (var i = 0; i < this.componentNames.length; ++i) {\r\n            if (this.componentNames[i] === componentName) {\r\n                this.entities.remove(entity);\r\n                this.entityRemoved.emit(entity, removedComponent);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check if an entity belongs to this family.\r\n     * @private\r\n     * @param {Entity} entity\r\n     * @return {Boolean}\r\n     */\r\n    Family.prototype.matchEntity = function (entity) {\r\n        for (var i = 0; i < this.componentNames.length; i++) {\r\n            if (!entity.hasComponent(this.componentNames[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return Family;\r\n}());\r\nexports.Family = Family;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/moon/src/Family.ts\n// module id = 22\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/moon/src/Family.ts?");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Family_1 = __webpack_require__(22);\r\nvar EntityList_1 = __webpack_require__(8);\r\n/**\r\n * The world is the container of all the entities and systems.\r\n * @class\r\n */\r\nvar World = (function () {\r\n    function World() {\r\n        /**\r\n         * A map from familyId to family\r\n         * @private\r\n         */\r\n        this.families = {};\r\n        /**\r\n         * @private\r\n         */\r\n        this.systems = [];\r\n        /**\r\n         * @private\r\n         */\r\n        this.entities = new EntityList_1.EntityList();\r\n        // this.systemEventBusSignal = new signals.Signal;\r\n    }\r\n    World.prototype.cleanUp = function () {\r\n        var entities = this.entities.toArray();\r\n        for (var i = entities.length - 1; i >= 0; i--) {\r\n            this.removeEntity(entities[i]);\r\n        }\r\n        for (var i = this.systems.length - 1; i >= 0; i--) {\r\n            this.removeSystem(this.systems[i]);\r\n        }\r\n    };\r\n    World.prototype.dispatchWorldEvent = function (eventName, eventData) {\r\n        //      this.systemEventBusSignal.dispatch(eventName, eventData);\r\n    };\r\n    /**\r\n     * Add a system to this world.\r\n     * @public\r\n     * @param {System} system\r\n     */\r\n    World.prototype.addSystem = function (system) {\r\n        this.systems.push(system);\r\n        system.addedToWorld(this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Remove a system from this world.\r\n     * @public\r\n     * @param {System} system\r\n     */\r\n    World.prototype.removeSystem = function (system) {\r\n        for (var i = 0; i < this.systems.length; i++) {\r\n            if (this.systems[i] === system) {\r\n                this.systems.splice(i, 1);\r\n                system.removedFromWorld();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Add an entity to this world.\r\n     * @public\r\n     * @param {Entity} entity\r\n     */\r\n    World.prototype.addEntity = function (entity) {\r\n        var _this = this;\r\n        // try to add the entity into each family\r\n        for (var familyId in this.families) {\r\n            if (this.families.hasOwnProperty(familyId)) {\r\n                this.families[familyId].addEntityIfMatch(entity);\r\n            }\r\n        }\r\n        // update the entity-family relationship whenever components are\r\n        // added to or removed from the entities\r\n        entity.onComponentAdded.add(function (entity, componentName) {\r\n            _this.onComponentAdded(entity, componentName);\r\n        });\r\n        entity.onComponentRemoved.add(function (entity, componentName, component) {\r\n            _this.onComponentRemoved(entity, componentName, component);\r\n        });\r\n        this.entities.add(entity);\r\n    };\r\n    /**\r\n    * gets and entity by id\r\n    * @public\r\n    * @param {entityId} entity\r\n    * @return {Entity}\r\n    */\r\n    World.prototype.get = function (entityId) {\r\n        return this.entities.get(entityId);\r\n    };\r\n    /**\r\n     * Remove and entity from this world.\r\n     * @public\r\n     * @param {Entity} entity\r\n     */\r\n    World.prototype.removeEntity = function (entity) {\r\n        // try to remove the entity from each family\r\n        for (var familyId in this.families) {\r\n            if (this.families.hasOwnProperty(familyId)) {\r\n                this.families[familyId].removeEntity(entity);\r\n            }\r\n        }\r\n        this.entities.remove(entity);\r\n    };\r\n    /**\r\n     * Get the entities having all the specified componets.\r\n     * @public\r\n     * @param {...String} componentNames\r\n     * @return {Array} an array of entities.\r\n     */\r\n    World.prototype.getEntities = function () {\r\n        var componentNames = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            componentNames[_i] = arguments[_i];\r\n        }\r\n        var familyId = World.getFamilyId(componentNames);\r\n        this.ensureFamilyExists(componentNames);\r\n        return this.families[familyId].getEntities();\r\n    };\r\n    /**\r\n     * For each system in the world, call its `update` method.\r\n     * @public\r\n     * @param {Number} dt time interval between updates.\r\n     */\r\n    World.prototype.update = function (dt) {\r\n        for (var _i = 0, _a = this.systems; _i < _a.length; _i++) {\r\n            var system = _a[_i];\r\n            system.update(dt);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the signal for entities added with the specified components. The\r\n     * signal is also emitted when a component is added to an entity causing it\r\n     * match the specified component names.\r\n     * @public\r\n     * @param {...String} componentNames\r\n     * @return {Signal} A signal which is emitted every time an entity with\r\n     *     specified components is added.\r\n     */\r\n    World.prototype.entityAdded = function () {\r\n        var componentNames = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            componentNames[_i] = arguments[_i];\r\n        }\r\n        var familyId = World.getFamilyId(componentNames);\r\n        this.ensureFamilyExists(componentNames);\r\n        return this.families[familyId].entityAdded;\r\n    };\r\n    /**\r\n     * Returns the signal for entities removed with the specified components.\r\n     * The signal is also emitted when a component is removed from an entity\r\n     * causing it to no longer match the specified component names.\r\n     * @public\r\n     * @param {...String} componentNames\r\n     * @return {Signal} A signal which is emitted every time an entity with\r\n     *     specified components is removed.\r\n     */\r\n    World.prototype.entityRemoved = function () {\r\n        var componentNames = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            componentNames[_i] = arguments[_i];\r\n        }\r\n        var familyId = World.getFamilyId(componentNames);\r\n        this.ensureFamilyExists(componentNames);\r\n        return this.families[familyId].entityRemoved;\r\n    };\r\n    /**\r\n     * Creates a family for the passed array of component names if it does not\r\n     * exist already.\r\n     * @param {Array.<String>} components\r\n     */\r\n    World.prototype.ensureFamilyExists = function (components) {\r\n        var families = this.families;\r\n        var familyId = World.getFamilyId(components);\r\n        if (!families[familyId]) {\r\n            families[familyId] = new Family_1.Family(Array.prototype.slice.call(components));\r\n            for (var node = this.entities.head; node; node = node.next) {\r\n                families[familyId].addEntityIfMatch(node.entity);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the family ID for the passed array of component names. A family\r\n     * ID is a comma separated string of all component names with a '$'\r\n     * prepended.\r\n     * @param {Array.<String>} components\r\n     * @return {String} The family ID for the passed array of components.\r\n     */\r\n    World.getFamilyId = function (components) {\r\n        return '$' + Array.prototype.join.call(components, ',');\r\n    };\r\n    /**\r\n     * Handler to be called when a component is added to an entity.\r\n     * @private\r\n     * @param {Entity} entity\r\n     * @param {String} componentName\r\n     */\r\n    World.prototype.onComponentAdded = function (entity, componentName) {\r\n        for (var familyId in this.families) {\r\n            if (this.families.hasOwnProperty(familyId)) {\r\n                this.families[familyId].onComponentAdded(entity, componentName);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handler to be called when component is removed from an entity.\r\n     * @private\r\n     * @param {Entity} entity\r\n     * @param {String} componentName\r\n     * @param {Component} component\r\n     */\r\n    World.prototype.onComponentRemoved = function (entity, componentName, component) {\r\n        for (var familyId in this.families) {\r\n            if (this.families.hasOwnProperty(familyId)) {\r\n                this.families[familyId].onComponentRemoved(entity, componentName, component);\r\n            }\r\n        }\r\n    };\r\n    return World;\r\n}());\r\nexports.World = World;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../tslib/moon/src/World.ts\n// module id = 23\n// module chunks = 0\n\n//# sourceURL=webpack:///../tslib/moon/src/World.ts?");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Application2_1 = __webpack_require__(14);\r\nexports.App = new Application2_1.Application2();\r\n/**\r\n * @desc exposed directly to the globally scoped library variable configured in your webpack options\r\n * called by the cocos2dx entry scene\r\n * @see webpackconfig.js  {library:\"CocosTSGame\"}\r\n *\r\n */\r\nfunction start() {\r\n    exports.App.startUp();\r\n}\r\nexports.start = start;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Bootstrap.ts\n// module id = 24\n// module chunks = 0\n\n//# sourceURL=webpack:///./Bootstrap.ts?");

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ScreenTypes_1 = __webpack_require__(33);\r\nvar GameController = (function () {\r\n    function GameController() {\r\n        //inject\r\n        this._system = undefined;\r\n    }\r\n    /**\r\n     *  handler for the ApplicationEvents.APP_STARTUP_COMPLETE event\r\n     */\r\n    GameController.prototype.onAppStartupComplete = function () {\r\n        console.log(\"GameController::onAppStartupComplete\");\r\n        this.onDoNavigation(ScreenTypes_1.ScreenTypes.SPLASH_SCREEN);\r\n    };\r\n    /**\r\n     *  handler for the ApplicationEvents.APP_GOTO_PLAY_SCENE event\r\n     */\r\n    GameController.prototype.onAppGoToPlayScene = function () {\r\n        this.onDoNavigation(ScreenTypes_1.ScreenTypes.GAMEPLAY_SCREEN);\r\n    };\r\n    /**\r\n     *  handler for the ApplicationEvents.APP_GOTO_SPLASH_SCENE event\r\n     */\r\n    GameController.prototype.onAppGoToSplashScene = function () {\r\n        this.onDoNavigation(ScreenTypes_1.ScreenTypes.SPLASH_SCREEN);\r\n    };\r\n    /**\r\n     *  handler for the app:doNavigation event\r\n     */\r\n    GameController.prototype.onDoNavigation = function (gotoScreen) {\r\n        switch (gotoScreen) {\r\n            case ScreenTypes_1.ScreenTypes.SPLASH_SCREEN:\r\n                if (this._splashScreenView == null)\r\n                    this._splashScreenView = this._system.getObject(\"SplashScreenView\");\r\n                this._splashScreenView.show();\r\n                break;\r\n            case ScreenTypes_1.ScreenTypes.GAMEPLAY_SCREEN:\r\n                if (this._gameView == null)\r\n                    this._gameView = this._system.getObject(\"GameView\");\r\n                this._gameView.show();\r\n                break;\r\n        }\r\n    };\r\n    return GameController;\r\n}());\r\nexports.GameController = GameController;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./controller/GameController.ts\n// module id = 25\n// module chunks = 0\n\n//# sourceURL=webpack:///./controller/GameController.ts?");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @description emum providing identifiable colour options for MockAsset\r\n */\r\nvar MockAssetColours;\r\n(function (MockAssetColours) {\r\n    MockAssetColours[MockAssetColours[\"RED\"] = 0] = \"RED\";\r\n    MockAssetColours[MockAssetColours[\"BLUE\"] = 1] = \"BLUE\";\r\n    MockAssetColours[MockAssetColours[\"YELLOW\"] = 2] = \"YELLOW\";\r\n    MockAssetColours[MockAssetColours[\"GREEN\"] = 3] = \"GREEN\";\r\n    MockAssetColours[MockAssetColours[\"PINK\"] = 4] = \"PINK\";\r\n    MockAssetColours[MockAssetColours[\"NONE\"] = 5] = \"NONE\";\r\n})(MockAssetColours = exports.MockAssetColours || (exports.MockAssetColours = {}));\r\n;\r\n/**\r\n * @class MockAsset\r\n * @description a cc.Node derived class for creating mock assets ,creates a circle with given radius, containing a label with optional  text\r\n * Template option T is for the Type used to describe type generally string | int | enumtype\r\n */\r\nvar MockAsset = (function (_super) {\r\n    __extends(MockAsset, _super);\r\n    function MockAsset(config, radius, COLOUR, text) {\r\n        if (radius === void 0) { radius = 20; }\r\n        if (COLOUR === void 0) { COLOUR = MockAssetColours.BLUE; }\r\n        if (text === void 0) { text = \"Text\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this._visibleNode = null;\r\n        _this._objecttype = null;\r\n        _this.ctor();\r\n        _this._objecttype = config.getType();\r\n        _this.setName(config.getName());\r\n        _this.setContentSize(radius * 2, radius * 2);\r\n        _this.setAnchorPoint(0.5, 0.5);\r\n        _this._circleNode = new cc.DrawNode();\r\n        _this._circleNode.drawDot(cc.p(radius, radius), radius, _this.getColour(COLOUR));\r\n        _this.addChild(_this._circleNode);\r\n        var textF = new ccui.Text();\r\n        textF.boundingWidth = radius * 2;\r\n        textF.boundingHeight = 30;\r\n        textF.attr({\r\n            textAlign: cc.TEXT_ALIGNMENT_CENTER,\r\n            string: text,\r\n            font: \"20px Ariel\",\r\n            x: radius\r\n        });\r\n        textF.y = radius - textF.height / 8;\r\n        _this.addChild(textF);\r\n        return _this;\r\n    }\r\n    MockAsset.prototype.getColour = function (colour) {\r\n        switch (colour) {\r\n            case MockAssetColours.RED:\r\n                return new cc.Color(187, 56, 10, 255);\r\n            case MockAssetColours.GREEN:\r\n                return new cc.Color(12, 123, 2, 255);\r\n            case MockAssetColours.BLUE:\r\n                return new cc.Color(27, 68, 174, 255);\r\n            case MockAssetColours.PINK:\r\n                return new cc.Color(211, 62, 109, 255);\r\n            case MockAssetColours.YELLOW:\r\n                return new cc.Color(242, 171, 52, 255);\r\n            case MockAssetColours.NONE:\r\n                return new cc.Color(255, 255, 255, 255);\r\n        }\r\n    };\r\n    return MockAsset;\r\n}(cc.Node));\r\nexports.MockAsset = MockAsset;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./factory/view/characterassetfactory/MockAsset.ts\n// module id = 26\n// module chunks = 0\n\n//# sourceURL=webpack:///./factory/view/characterassetfactory/MockAsset.ts?");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Model_1 = __webpack_require__(17);\r\nvar GameModel = (function (_super) {\r\n    __extends(GameModel, _super);\r\n    function GameModel() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GameModel.prototype.setup = function () {\r\n        this.set(GameModel.CURRENT_LEVEL, 2);\r\n        this.set(GameModel.TIME_REMAINING, 200);\r\n    };\r\n    GameModel.prototype.getCurrentLevel = function () {\r\n        return this.get(GameModel.CURRENT_LEVEL);\r\n    };\r\n    GameModel.prototype.setCurrentLevel = function (val) {\r\n        this.set(GameModel.CURRENT_LEVEL, val);\r\n    };\r\n    GameModel.prototype.getTimeRemaining = function () {\r\n        return this.get(GameModel.TIME_REMAINING);\r\n    };\r\n    GameModel.prototype.setTimeRemaining = function (val) {\r\n        this.set(GameModel.TIME_REMAINING, val);\r\n    };\r\n    return GameModel;\r\n}(Model_1.Model));\r\nGameModel.CURRENT_LEVEL = \"level.current\";\r\n/*\r\ncurrent game\r\n*/\r\nGameModel.TIME_REMAINING = \"game.timeRemaining\";\r\nexports.GameModel = GameModel;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./model/GameModel.ts\n// module id = 27\n// module chunks = 0\n\n//# sourceURL=webpack:///./model/GameModel.ts?");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GameComponentTypes_1 = __webpack_require__(0);\r\nvar System_1 = __webpack_require__(1);\r\nvar GameViewSystem = (function (_super) {\r\n    __extends(GameViewSystem, _super);\r\n    function GameViewSystem(container) {\r\n        var _this = _super.call(this) || this;\r\n        _this._container = container;\r\n        return _this;\r\n    }\r\n    GameViewSystem.prototype.setup = function () {\r\n    };\r\n    GameViewSystem.prototype.refreshEntityLists = function () {\r\n        this._renderEntities = this.world.getEntities(GameComponentTypes_1.GameComponentTypes.COCOS_RENDER_NODE);\r\n    };\r\n    GameViewSystem.prototype.addedToWorld = function (world) {\r\n        _super.prototype.addedToWorld.call(this, world);\r\n        cc.log(\"GameViewSystem Added\");\r\n        var scope = this;\r\n        this.world.entityAdded(GameComponentTypes_1.GameComponentTypes.COCOS_RENDER_NODE).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n            cc.log(\"render node added \");\r\n            var crnc = entity.getComponent(GameComponentTypes_1.GameComponentTypes.COCOS_RENDER_NODE);\r\n            scope._container.addChild(crnc.node);\r\n        });\r\n        this.world.entityRemoved(GameComponentTypes_1.GameComponentTypes.COCOS_RENDER_NODE).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n            cc.log(\"render node removed \");\r\n            var crnc = entity.getComponent(GameComponentTypes_1.GameComponentTypes.COCOS_RENDER_NODE);\r\n            scope._container.removeChild(crnc.node);\r\n            crnc.node = null;\r\n        });\r\n    };\r\n    GameViewSystem.prototype.update = function (dt) {\r\n    };\r\n    /**\r\n     * do all cleanup here\r\n     */\r\n    GameViewSystem.prototype.removedFromWorld = function () {\r\n        _super.prototype.removedFromWorld.call(this);\r\n        this._renderEntities = null;\r\n        this._container = null;\r\n    };\r\n    return GameViewSystem;\r\n}(System_1.System));\r\nexports.GameViewSystem = GameViewSystem;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/GameViewSystem.ts\n// module id = 28\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/GameViewSystem.ts?");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GameComponentTypes_1 = __webpack_require__(0);\r\nvar CharacterEntityFactory_1 = __webpack_require__(10);\r\nvar System_1 = __webpack_require__(1);\r\nvar EntityTypes_1 = __webpack_require__(13);\r\nvar GameplaySystem = (function (_super) {\r\n    __extends(GameplaySystem, _super);\r\n    function GameplaySystem() {\r\n        var _this = _super.call(this) || this;\r\n        //inject\r\n        _this._characterEntityFactory = null;\r\n        return _this;\r\n    }\r\n    GameplaySystem.prototype.setup = function () {\r\n    };\r\n    GameplaySystem.prototype.refreshEntityLists = function () {\r\n        this._playerEntities = this.world.getEntities(GameComponentTypes_1.GameComponentTypes.PLAYER, GameComponentTypes_1.GameComponentTypes.STATE);\r\n        this._inputEffectedEntities = this.world.getEntities(GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT);\r\n    };\r\n    GameplaySystem.prototype.addedToWorld = function (world) {\r\n        _super.prototype.addedToWorld.call(this, world);\r\n        cc.log(\"GameplaySystem Added\");\r\n        this.initialiseGame();\r\n        var scope = this;\r\n        this.world.entityAdded(GameComponentTypes_1.GameComponentTypes.PLAYER, GameComponentTypes_1.GameComponentTypes.STATE).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n        });\r\n        this.world.entityRemoved(GameComponentTypes_1.GameComponentTypes.PLAYER, GameComponentTypes_1.GameComponentTypes.STATE).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n        });\r\n        this.world.entityAdded(GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n            //handle input events\r\n            entity.onComponentAdded.add(function (entity, componentName) {\r\n                switch (componentName) {\r\n                    case GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT_EVENT:\r\n                        //handle player input event here\r\n                        cc.log(\"player input event occured\");\r\n                        //remove event component\r\n                        entity.removeComponent(GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT_EVENT);\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n        this.world.entityRemoved(GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n        });\r\n        scope.refreshEntityLists();\r\n    };\r\n    GameplaySystem.prototype.initialiseGame = function () {\r\n        var ceco = new CharacterEntityFactory_1.CharacterEntityCreationOptions(EntityTypes_1.CharacterEntityTypes.PLAYER, \"Player\");\r\n        var player = this._characterEntityFactory.create(ceco);\r\n        var ceco2 = new CharacterEntityFactory_1.CharacterEntityCreationOptions(EntityTypes_1.CharacterEntityTypes.NPC, \"Npc\");\r\n        var npc = this._characterEntityFactory.create(ceco2);\r\n        this.world.addEntity(player);\r\n        this.world.addEntity(npc);\r\n    };\r\n    GameplaySystem.prototype.update = function (dt) {\r\n    };\r\n    /**\r\n     * do all cleanup here\r\n     */\r\n    GameplaySystem.prototype.removedFromWorld = function () {\r\n        _super.prototype.removedFromWorld.call(this);\r\n        this._inputEffectedEntities = null;\r\n        this._playerEntities = null;\r\n        this._characterEntityFactory = null;\r\n    };\r\n    return GameplaySystem;\r\n}(System_1.System));\r\nexports.GameplaySystem = GameplaySystem;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/GameplaySystem.ts\n// module id = 29\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/GameplaySystem.ts?");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GameComponentTypes_1 = __webpack_require__(0);\r\nvar System_1 = __webpack_require__(1);\r\nvar NPCAISystem = (function (_super) {\r\n    __extends(NPCAISystem, _super);\r\n    function NPCAISystem() {\r\n        return _super.call(this) || this;\r\n    }\r\n    NPCAISystem.prototype.setup = function () {\r\n    };\r\n    NPCAISystem.prototype.refreshEntityLists = function () {\r\n        this._renderEntities = this.world.getEntities(GameComponentTypes_1.GameComponentTypes.SCRIPTED_NPC_AI, GameComponentTypes_1.GameComponentTypes.STATE);\r\n    };\r\n    NPCAISystem.prototype.addedToWorld = function (world) {\r\n        _super.prototype.addedToWorld.call(this, world);\r\n        cc.log(\"NPCAISystem Added\");\r\n        var scope = this;\r\n        this.world.entityAdded(GameComponentTypes_1.GameComponentTypes.SCRIPTED_NPC_AI, GameComponentTypes_1.GameComponentTypes.STATE).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n        });\r\n        this.world.entityRemoved(GameComponentTypes_1.GameComponentTypes.SCRIPTED_NPC_AI, GameComponentTypes_1.GameComponentTypes.STATE).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n        });\r\n        scope.refreshEntityLists();\r\n    };\r\n    NPCAISystem.prototype.update = function (dt) {\r\n    };\r\n    /**\r\n     * do all cleanup here\r\n     */\r\n    NPCAISystem.prototype.removedFromWorld = function () {\r\n        _super.prototype.removedFromWorld.call(this);\r\n        this._renderEntities = null;\r\n    };\r\n    return NPCAISystem;\r\n}(System_1.System));\r\nexports.NPCAISystem = NPCAISystem;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/NPCAISystem.ts\n// module id = 30\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/NPCAISystem.ts?");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GameComponentTypes_1 = __webpack_require__(0);\r\nvar SwipeDirections_1 = __webpack_require__(4);\r\nvar GameComponents_1 = __webpack_require__(2);\r\nvar DirectionalSwipeGestureRecogniser_1 = __webpack_require__(16);\r\nvar System_1 = __webpack_require__(1);\r\nvar InputTypes_1 = __webpack_require__(32);\r\nvar PlayerInputSystem = (function (_super) {\r\n    __extends(PlayerInputSystem, _super);\r\n    function PlayerInputSystem() {\r\n        return _super.call(this) || this;\r\n    }\r\n    //  protected _target: cc.Node;\r\n    PlayerInputSystem.prototype.setup = function () {\r\n    };\r\n    PlayerInputSystem.prototype.refreshEntityLists = function () {\r\n        this._inputControlledEntities = this.world.getEntities(GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT);\r\n    };\r\n    PlayerInputSystem.prototype.addedToWorld = function (world) {\r\n        _super.prototype.addedToWorld.call(this, world);\r\n        cc.log(\"PlayerInputSystem Added\");\r\n        var scope = this;\r\n        this.world.entityAdded(GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n        });\r\n        this.world.entityRemoved(GameComponentTypes_1.GameComponentTypes.PLAYER_INPUT).add(function (entity) {\r\n            scope.refreshEntityLists();\r\n        });\r\n        this.refreshEntityLists();\r\n        this.createTapListeners(null);\r\n    };\r\n    PlayerInputSystem.prototype.update = function (dt) {\r\n    };\r\n    /**\r\n     * @see http://discuss.cocos2d-x.org/t/new-event-manager-in-cocos2d-html5-v3-0/11637\r\n     * @param container\r\n     */\r\n    PlayerInputSystem.prototype.createTapListeners = function (container) {\r\n        var scope = this;\r\n        this._listener = cc.EventListener.create({\r\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            swallowTouches: false,\r\n            onTouchBegan: function (touch, event) {\r\n                cc.log(\"onTouchBegan\");\r\n                scope._gestureRecogniser = new DirectionalSwipeGestureRecogniser_1.DirectionalSwipeGestureRecogniser();\r\n                var location = touch.getLocation();\r\n                for (var i = 0; i < scope._inputControlledEntities.length; i++) {\r\n                    var pevent = new GameComponents_1.PlayerInputEvent();\r\n                    pevent.positions.push(cc.p(location.x, location.y));\r\n                    pevent.type = InputTypes_1.InputTypes.TOUCH_BEGAN;\r\n                    scope._inputControlledEntities[i].addComponent(pevent);\r\n                }\r\n                scope._gestureRecogniser.beginPoint(location.x, location.y);\r\n                return true;\r\n            },\r\n            onTouchMoved: function (touch, event) {\r\n                cc.log(\"onTouchMoved\");\r\n                var location = touch.getLocation();\r\n                for (var i = 0; i < scope._inputControlledEntities.length; i++) {\r\n                    var pevent = new GameComponents_1.PlayerInputEvent();\r\n                    pevent.positions.push(cc.p(location.x, location.y));\r\n                    pevent.type = InputTypes_1.InputTypes.TOUCH_MOVED;\r\n                    scope._inputControlledEntities[i].addComponent(pevent);\r\n                }\r\n            },\r\n            onTouchEnded: function (touch, event) {\r\n                cc.log(\"onTouchEnded\");\r\n                var location = touch.getLocation();\r\n                var swipeResult = scope._gestureRecogniser.endPoint(location.x, location.y);\r\n                for (var i = 0; i < scope._inputControlledEntities.length; i++) {\r\n                    var pevent = new GameComponents_1.PlayerInputEvent();\r\n                    pevent.positions.push(cc.p(location.x, location.y));\r\n                    pevent.type = InputTypes_1.InputTypes.TOUCH_ENDED;\r\n                    scope._inputControlledEntities[i].addComponent(pevent);\r\n                }\r\n                cc.log(\"swipeResult \" + swipeResult);\r\n                switch (swipeResult) {\r\n                    case SwipeDirections_1.SwipeDirections.SWIPE_ANY_DIR:\r\n                        for (var i = 0; i < scope._inputControlledEntities.length; i++) {\r\n                            var pevent = new GameComponents_1.PlayerInputEvent();\r\n                            pevent.type = InputTypes_1.InputTypes.TOUCH_SWIPE;\r\n                            pevent.swipeDir = swipeResult;\r\n                            pevent.direction = scope._gestureRecogniser.getDirection();\r\n                            scope._inputControlledEntities[i].addComponent(pevent);\r\n                        }\r\n                        break;\r\n                    case SwipeDirections_1.SwipeDirections.TAP:\r\n                        var location = touch.getLocation();\r\n                        for (var i = 0; i < scope._inputControlledEntities.length; i++) {\r\n                            var pevent = new GameComponents_1.PlayerInputEvent();\r\n                            pevent.type = InputTypes_1.InputTypes.TOUCH_TAP;\r\n                            pevent.positions.push(cc.p(location.x, location.y));\r\n                            pevent.location = touch.getLocation();\r\n                            pevent.target = container;\r\n                            scope._inputControlledEntities[i].addComponent(pevent);\r\n                        }\r\n                        break;\r\n                    case SwipeDirections_1.SwipeDirections.SWIPE_DOWN:\r\n                    case SwipeDirections_1.SwipeDirections.SWIPE_UP:\r\n                    case SwipeDirections_1.SwipeDirections.SWIPE_LEFT:\r\n                    case SwipeDirections_1.SwipeDirections.SWIPE_RIGHT:\r\n                        cc.log(\"swpe \" + swipeResult);\r\n                        for (var i = 0; i < scope._inputControlledEntities.length; i++) {\r\n                            var pevent = new GameComponents_1.PlayerInputEvent();\r\n                            pevent.type = InputTypes_1.InputTypes.TOUCH_SWIPE;\r\n                            pevent.swipeDir = swipeResult;\r\n                            scope._inputControlledEntities[i].addComponent(pevent);\r\n                        }\r\n                        break;\r\n                }\r\n            },\r\n            onTouchCancelled: function (touch, event) {\r\n                cc.log(\"touchCancelled\");\r\n                for (var i = 0; i < scope._inputControlledEntities.length; i++) {\r\n                    var pevent = new GameComponents_1.PlayerInputEvent();\r\n                    pevent.type = InputTypes_1.InputTypes.TOUCH_CANCELLED;\r\n                    scope._inputControlledEntities[i].addComponent(pevent);\r\n                }\r\n            }\r\n        });\r\n        if (container == null)\r\n            cc.eventManager.addListener(this._listener, 1);\r\n        else\r\n            cc.eventManager.addListener(this._listener, container);\r\n    };\r\n    /**\r\n     * do all cleanup here\r\n     */\r\n    PlayerInputSystem.prototype.removedFromWorld = function () {\r\n        _super.prototype.removedFromWorld.call(this);\r\n        cc.eventManager.removeListener(this._listener);\r\n        this._inputControlledEntities = null;\r\n        this._gestureRecogniser = null;\r\n        this._listener = null;\r\n    };\r\n    return PlayerInputSystem;\r\n}(System_1.System));\r\nexports.PlayerInputSystem = PlayerInputSystem;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./system/PlayerInputSystem.ts\n// module id = 31\n// module chunks = 0\n\n//# sourceURL=webpack:///./system/PlayerInputSystem.ts?");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar InputTypes;\r\n(function (InputTypes) {\r\n    InputTypes[InputTypes[\"TOUCH_BEGAN\"] = 0] = \"TOUCH_BEGAN\";\r\n    InputTypes[InputTypes[\"TOUCH_ENDED\"] = 1] = \"TOUCH_ENDED\";\r\n    InputTypes[InputTypes[\"TOUCH_SWIPE\"] = 2] = \"TOUCH_SWIPE\";\r\n    InputTypes[InputTypes[\"TOUCH_TAP\"] = 3] = \"TOUCH_TAP\";\r\n    InputTypes[InputTypes[\"TOUCH_MOVED\"] = 4] = \"TOUCH_MOVED\";\r\n    InputTypes[InputTypes[\"TOUCH_CANCELLED\"] = 5] = \"TOUCH_CANCELLED\";\r\n})(InputTypes = exports.InputTypes || (exports.InputTypes = {}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./types/InputTypes.ts\n// module id = 32\n// module chunks = 0\n\n//# sourceURL=webpack:///./types/InputTypes.ts?");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ScreenTypes;\r\n(function (ScreenTypes) {\r\n    ScreenTypes[ScreenTypes[\"SPLASH_SCREEN\"] = 0] = \"SPLASH_SCREEN\";\r\n    ScreenTypes[ScreenTypes[\"GAMEPLAY_SCREEN\"] = 1] = \"GAMEPLAY_SCREEN\";\r\n})(ScreenTypes = exports.ScreenTypes || (exports.ScreenTypes = {}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./types/ScreenTypes.ts\n// module id = 33\n// module chunks = 0\n\n//# sourceURL=webpack:///./types/ScreenTypes.ts?");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar View_1 = __webpack_require__(6);\r\nvar GameViewScene_1 = __webpack_require__(38);\r\nvar GameView = (function (_super) {\r\n    __extends(GameView, _super);\r\n    function GameView() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        //inject\r\n        _this._display = undefined;\r\n        return _this;\r\n    }\r\n    GameView.prototype.show = function (parent) {\r\n        this.setAsset(new GameViewScene_1.GameViewScene());\r\n        this.initLifecycleListeners();\r\n        cc.director.runScene(this.getAsset());\r\n    };\r\n    GameView.prototype.onEnterHandler = function () {\r\n        cc.log(\"GameView:onEnterHandler\");\r\n        var button = new ccui.Button();\r\n        button.setTitleText(\"Exit Game\");\r\n        button.setTouchEnabled(true);\r\n        button.addTouchEventListener(this.touchEvent, this);\r\n        button.setName(\"exitGameButton\");\r\n        button.setPosition(this._display.topRight().x - 50, this._display.topRight().y - 50);\r\n        this.addChild(button, 0);\r\n    };\r\n    GameView.prototype.touchEvent = function (sender, type) {\r\n        switch (type) {\r\n            case ccui.Widget.TOUCH_BEGAN:\r\n                break;\r\n            case ccui.Widget.TOUCH_MOVED:\r\n                break;\r\n            case ccui.Widget.TOUCH_ENDED:\r\n                cc.log(sender.getName() + \" pressed\");\r\n                switch (sender.getName()) {\r\n                    case \"exitGameButton\":\r\n                        this.getUIEventBus().dispatch(\"exitGameButtonPressed\");\r\n                        break;\r\n                }\r\n                break;\r\n            case ccui.Widget.TOUCH_CANCELED:\r\n                break;\r\n        }\r\n    };\r\n    GameView.prototype.onEnterTransitionDidFinishHandler = function () {\r\n    };\r\n    GameView.prototype.onExitHandler = function () {\r\n        cc.log(\"GameView:onExithandler\");\r\n        this.removeLifeCycleListeners();\r\n        this.setAsset(null);\r\n    };\r\n    GameView.prototype.onExitTransitionDidStartHandler = function () {\r\n    };\r\n    return GameView;\r\n}(View_1.View));\r\nexports.GameView = GameView;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/GameView.ts\n// module id = 34\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/GameView.ts?");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ViewController_1 = __webpack_require__(7);\r\nvar PlayerInputSystem_1 = __webpack_require__(31);\r\nvar World_1 = __webpack_require__(23);\r\nvar GameViewSystem_1 = __webpack_require__(28);\r\nvar NPCAISystem_1 = __webpack_require__(30);\r\nvar ApplicationEvents_1 = __webpack_require__(3);\r\nvar GameViewController = (function (_super) {\r\n    __extends(GameViewController, _super);\r\n    function GameViewController() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        //inject\r\n        _this._display = undefined;\r\n        return _this;\r\n    }\r\n    GameViewController.prototype.onViewReady = function () {\r\n        this.getView().getUIEventBus().add(this.onViewUIEvent, this);\r\n        this.getView().getEnterSignal().add(this.onViewEnter, this);\r\n        this.getView().getExitSignal().add(this.onViewExit, this);\r\n        this.getView().getEnterTransitionDidFinishSignal().add(this.onViewEnterTransitionDidFinish, this);\r\n        this.getView().getExitTransitionDidStartSignal().add(this.onViewExitTransitionDidStart, this);\r\n    };\r\n    /**\r\n     * @function onViewEnter\r\n     * @description recommended here that you initialise any resources required for the view/scene\r\n     * --TIP: here you could also load and re instate the saved game state\r\n     * @see cc.Node onEnter\r\n     */\r\n    GameViewController.prototype.onViewEnter = function () {\r\n        cc.log(\"GameViewController::onViewEnter\");\r\n        this.initialiseGameWorld();\r\n    };\r\n    GameViewController.prototype.initialiseGameWorld = function () {\r\n        /**\r\n         * create the MOON CES world to hold our games entities and systems\r\n         */\r\n        this._world = new World_1.World();\r\n        /**\r\n        * create the systems for our world\r\n        * GameplaySystem - controls the core gameplay logic - creates our npc and player entities upon game startup\r\n        * NPCAISystem - controlls the AI for entities that have the NPC component\r\n        * GameViewSystem - controls adding and removing cc.Nodes (wrapped by CocosRenderNode components)to and from the display\r\n        * PlayerInputSystem - manages a Gesture recogniser that recognises swipe and tap events,\r\n        * adds a PlayerInputEvent coponent to all entities that contain a PlayerInput Component\r\n        */\r\n        var gps = this._system.getObject(\"GameplaySystem\"); //new GameplaySystem();\r\n        var npcs = new NPCAISystem_1.NPCAISystem();\r\n        var gvs = new GameViewSystem_1.GameViewSystem(this.getView().getAsset());\r\n        var pis = new PlayerInputSystem_1.PlayerInputSystem();\r\n        /**\r\n         * add our systems to the world\r\n         */\r\n        this._world.addSystem(gvs);\r\n        this._world.addSystem(npcs);\r\n        this._world.addSystem(pis);\r\n        this._world.addSystem(gps);\r\n        /**\r\n         * schedule our update(dt:number) function\r\n         */\r\n        cc.director.getScheduler().scheduleUpdateForTarget(this, 1, false);\r\n    };\r\n    /**\r\n     * @description this update function is called every frame\r\n     * it is registered  via :cc.director.getScheduler().scheduleUpdateForTarget(this, 1, false);\r\n     * @param dt\r\n     */\r\n    GameViewController.prototype.update = function (dt) {\r\n        this._world.update(dt);\r\n        cc.log(\"update\");\r\n    };\r\n    GameViewController.prototype.onViewEnterTransitionDidFinish = function () {\r\n        cc.log(\"GameViewController::onViewEnterTransitionDidFinish\");\r\n    };\r\n    /**\r\n     * @function onViewExit\r\n     * @description recommended here that you free any resources allocated for the view/scene\r\n     * ---- TIP here you could also save the game state\r\n     * @see cc.Node onEnter\r\n     */\r\n    GameViewController.prototype.onViewExit = function () {\r\n        cc.director.getScheduler().unscheduleUpdateForTarget(this);\r\n        this._world.cleanUp();\r\n        this._world = null;\r\n        cc.log(\"GameViewController::onViewExit\");\r\n    };\r\n    GameViewController.prototype.onViewExitTransitionDidStart = function () {\r\n        cc.log(\"GameViewController::onViewExitTransitionDidStart\");\r\n    };\r\n    GameViewController.prototype.onViewUIEvent = function (event) {\r\n        switch (event) {\r\n            case \"exitGameButtonPressed\":\r\n                this._system.notify(ApplicationEvents_1.ApplicationEvents.APP_GOTO_SPLASH_SCENE);\r\n                break;\r\n        }\r\n    };\r\n    return GameViewController;\r\n}(ViewController_1.ViewController));\r\nexports.GameViewController = GameViewController;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/GameViewController.ts\n// module id = 35\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/GameViewController.ts?");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar View_1 = __webpack_require__(6);\r\nvar SplashScreenViewScene_1 = __webpack_require__(39);\r\nvar SplashScreenView = (function (_super) {\r\n    __extends(SplashScreenView, _super);\r\n    function SplashScreenView() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        //inject\r\n        _this._display = undefined;\r\n        return _this;\r\n    }\r\n    SplashScreenView.prototype.show = function (parent) {\r\n        this.setAsset(new SplashScreenViewScene_1.SplashScreenViewScene());\r\n        this.initLifecycleListeners();\r\n        cc.director.runScene(this.getAsset());\r\n    };\r\n    SplashScreenView.prototype.onEnterHandler = function () {\r\n        cc.log(\"SplashScreenView:onEnterHandler\");\r\n        var button = new ccui.Button();\r\n        button.setTitleText(\"Play Game\");\r\n        button.setTouchEnabled(true);\r\n        button.addTouchEventListener(this.touchEvent, this);\r\n        button.setName(\"playGameButton\");\r\n        button.setPosition(this._display.middleMiddle().x, this._display.middleMiddle().y);\r\n        this.addChild(button, 0);\r\n    };\r\n    SplashScreenView.prototype.onEnterTransitionDidFinishHandler = function () {\r\n        cc.log(\"SplashScreenView::onEnterTransitionDidFinishHandler\");\r\n    };\r\n    SplashScreenView.prototype.onExitHandler = function () {\r\n        cc.log(\"SplashScreenView:onExitHandler\");\r\n        this.removeLifeCycleListeners();\r\n        this.setAsset(null);\r\n    };\r\n    SplashScreenView.prototype.onExitTransitionDidStartHandler = function () {\r\n        cc.log(\"SplashScreenView::onExitTransitionDidStartHandler\");\r\n    };\r\n    SplashScreenView.prototype.touchEvent = function (sender, type) {\r\n        switch (type) {\r\n            case ccui.Widget.TOUCH_BEGAN:\r\n                break;\r\n            case ccui.Widget.TOUCH_MOVED:\r\n                break;\r\n            case ccui.Widget.TOUCH_ENDED:\r\n                switch (sender.getName()) {\r\n                    case \"playGameButton\":\r\n                        this.getUIEventBus().dispatch(\"playGameButtonPressed\");\r\n                        break;\r\n                }\r\n                break;\r\n            case ccui.Widget.TOUCH_CANCELED:\r\n                break;\r\n        }\r\n    };\r\n    return SplashScreenView;\r\n}(View_1.View));\r\nexports.SplashScreenView = SplashScreenView;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/SplashScreenView.ts\n// module id = 36\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/SplashScreenView.ts?");

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ViewController_1 = __webpack_require__(7);\r\nvar ApplicationEvents_1 = __webpack_require__(3);\r\nvar SplashScreenViewController = (function (_super) {\r\n    __extends(SplashScreenViewController, _super);\r\n    function SplashScreenViewController() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        //inject\r\n        _this._display = undefined;\r\n        return _this;\r\n    }\r\n    SplashScreenViewController.prototype.onViewReady = function () {\r\n        this.getView().getUIEventBus().add(this.onViewEvent, this);\r\n        this.getView().getEnterSignal().add(this.onViewEnter, this);\r\n        this.getView().getExitSignal().add(this.onViewExit, this);\r\n        this.getView().getEnterTransitionDidFinishSignal().add(this.onViewEnterTransitionDidFinish, this);\r\n        this.getView().getExitTransitionDidStartSignal().add(this.onViewExitTransitionDidStart, this);\r\n    };\r\n    SplashScreenViewController.prototype.onViewEnter = function () {\r\n        cc.log(\"SplashScreenViewController::onViewEnter\");\r\n    };\r\n    SplashScreenViewController.prototype.onViewEnterTransitionDidFinish = function () {\r\n        cc.log(\"SplashScreenViewController::onViewEnterTransitionDidFinish\");\r\n    };\r\n    /**\r\n     * @function onViewExit\r\n     * @description recommended here that you free any resources allocated for the view/scene\r\n     * ---- TIP here you could also save the game state\r\n     * @see cc.Node onEnter\r\n     */\r\n    SplashScreenViewController.prototype.onViewExit = function () {\r\n        cc.log(\"SplashScreenViewController::onViewExit\");\r\n    };\r\n    SplashScreenViewController.prototype.onViewExitTransitionDidStart = function () {\r\n        cc.log(\"SplashScreenViewController::onViewExitTransitionDidStart\");\r\n    };\r\n    SplashScreenViewController.prototype.onViewEvent = function (event) {\r\n        switch (event) {\r\n            case \"playGameButtonPressed\":\r\n                this._system.notify(ApplicationEvents_1.ApplicationEvents.APP_GOTO_PLAY_SCENE);\r\n                break;\r\n        }\r\n    };\r\n    return SplashScreenViewController;\r\n}(ViewController_1.ViewController));\r\nexports.SplashScreenViewController = SplashScreenViewController;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/SplashScreenViewController.ts\n// module id = 37\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/SplashScreenViewController.ts?");

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SceneExtended_1 = __webpack_require__(5);\r\nvar GameViewScene = (function (_super) {\r\n    __extends(GameViewScene, _super);\r\n    function GameViewScene() {\r\n        // 1. super init first\r\n        return _super.call(this) || this;\r\n        //super.ctor(); //always call this for compatibility with cocos2dx JS Javascript class system\r\n    }\r\n    return GameViewScene;\r\n}(SceneExtended_1.SceneExtended));\r\nexports.GameViewScene = GameViewScene;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/scenes/GameViewScene.ts\n// module id = 38\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/scenes/GameViewScene.ts?");

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SceneExtended_1 = __webpack_require__(5);\r\nvar SplashScreenViewScene = (function (_super) {\r\n    __extends(SplashScreenViewScene, _super);\r\n    function SplashScreenViewScene() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return SplashScreenViewScene;\r\n}(SceneExtended_1.SceneExtended));\r\nexports.SplashScreenViewScene = SplashScreenViewScene;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/scenes/SplashScreenViewScene.ts\n// module id = 39\n// module chunks = 0\n\n//# sourceURL=webpack:///./view/scenes/SplashScreenViewScene.ts?");

/***/ })
/******/ ]);